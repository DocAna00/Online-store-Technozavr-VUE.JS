{"ast":null,"code":"import _objectSpread from \"/Users/anadoc/Desktop/Skillbox Anastasia/Skillbox Projects/Vue.js Shop/Vue.js/07_api_1/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport Vue from \"vue\";\nimport Vuex from 'vuex';\nimport products from \"@/data/products\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    cartProducts: [{\n      productId: 1,\n      amount: 2\n    }]\n  },\n  mutations: {\n    addProductToCart: function addProductToCart(state, _ref) {\n      var productId = _ref.productId,\n        amount = _ref.amount;\n      var item = state.cartProducts.find(function (item) {\n        return item.productId === productId;\n      });\n      if (item) {\n        item.amount += amount;\n      } else {\n        state.cartProducts.push({\n          productId: productId,\n          amount: amount\n        });\n      }\n    },\n    updateCartProductAmount: function updateCartProductAmount(state, _ref2) {\n      var productId = _ref2.productId,\n        amount = _ref2.amount;\n      var item = state.cartProducts.find(function (item) {\n        return item.productId === productId;\n      });\n      if (item) {\n        item.amount = amount;\n      }\n    },\n    deleteCartProduct: function deleteCartProduct(state, productId) {\n      state.cartProducts = state.cartProducts.filter(function (item) {\n        return item.productId !== productId;\n      });\n    }\n  },\n  getters: {\n    cartDetailProducts: function cartDetailProducts(state) {\n      return state.cartProducts.map(function (item) {\n        return _objectSpread(_objectSpread({}, item), {}, {\n          product: products.find(function (p) {\n            return p.id === item.productId;\n          })\n        });\n      });\n    },\n    cartTotalPrice: function cartTotalPrice(state, getters) {\n      return getters.cartDetailProducts.reduce(function (acc, item) {\n        return item.product.price * item.amount + acc;\n      }, 0);\n    }\n  }\n});","map":{"version":3,"names":["Vue","Vuex","products","use","Store","state","cartProducts","productId","amount","mutations","addProductToCart","_ref","item","find","push","updateCartProductAmount","_ref2","deleteCartProduct","filter","getters","cartDetailProducts","map","_objectSpread","product","p","id","cartTotalPrice","reduce","acc","price"],"sources":["/Users/anadoc/Desktop/Skillbox Anastasia/Skillbox Projects/Vue.js Shop/Vue.js/07_api_1/src/store/index.js"],"sourcesContent":["import Vue from \"vue\";\nimport Vuex from 'vuex';\nimport products from \"@/data/products\";\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n    state: {\n        cartProducts: [\n            {\n                productId: 1, amount: 2\n            }\n        ]\n    },\n    mutations: {\n        addProductToCart(state, { productId, amount }) {\n            const item = state.cartProducts.find(item => item.productId === productId);\n\n            if (item) {\n                item.amount += amount;\n            } else {\n                state.cartProducts.push({\n                    productId,\n                    amount,\n                });\n            }\n        },\n        updateCartProductAmount(state, { productId, amount }) {\n            const item = state.cartProducts.find(item => item.productId === productId);\n\n            if (item) {\n                item.amount = amount;\n            }\n        },\n        deleteCartProduct(state, productId) {\n            state.cartProducts = state.cartProducts.filter(item => item.productId !== productId);\n        }\n    },\n    getters: {\n        cartDetailProducts(state) {\n            return state.cartProducts.map(item => {\n                return {\n                    ...item,\n                    product: products.find(p => p.id === item.productId)\n                }\n            });\n        },\n        cartTotalPrice(state, getters) {\n            return getters.cartDetailProducts.reduce((acc, item) => (item.product.price * item.amount) + acc, 0);\n        }\n    }\n});"],"mappings":";;;;;;;AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,QAAQ,MAAM,iBAAiB;AAEtCF,GAAG,CAACG,GAAG,CAACF,IAAI,CAAC;AAEb,eAAe,IAAIA,IAAI,CAACG,KAAK,CAAC;EAC1BC,KAAK,EAAE;IACHC,YAAY,EAAE,CACV;MACIC,SAAS,EAAE,CAAC;MAAEC,MAAM,EAAE;IAC1B,CAAC;EAET,CAAC;EACDC,SAAS,EAAE;IACPC,gBAAgB,WAAAA,iBAACL,KAAK,EAAAM,IAAA,EAAyB;MAAA,IAArBJ,SAAS,GAAAI,IAAA,CAATJ,SAAS;QAAEC,MAAM,GAAAG,IAAA,CAANH,MAAM;MACvC,IAAMI,IAAI,GAAGP,KAAK,CAACC,YAAY,CAACO,IAAI,CAAC,UAAAD,IAAI;QAAA,OAAIA,IAAI,CAACL,SAAS,KAAKA,SAAS;MAAA,EAAC;MAE1E,IAAIK,IAAI,EAAE;QACNA,IAAI,CAACJ,MAAM,IAAIA,MAAM;MACzB,CAAC,MAAM;QACHH,KAAK,CAACC,YAAY,CAACQ,IAAI,CAAC;UACpBP,SAAS,EAATA,SAAS;UACTC,MAAM,EAANA;QACJ,CAAC,CAAC;MACN;IACJ,CAAC;IACDO,uBAAuB,WAAAA,wBAACV,KAAK,EAAAW,KAAA,EAAyB;MAAA,IAArBT,SAAS,GAAAS,KAAA,CAATT,SAAS;QAAEC,MAAM,GAAAQ,KAAA,CAANR,MAAM;MAC9C,IAAMI,IAAI,GAAGP,KAAK,CAACC,YAAY,CAACO,IAAI,CAAC,UAAAD,IAAI;QAAA,OAAIA,IAAI,CAACL,SAAS,KAAKA,SAAS;MAAA,EAAC;MAE1E,IAAIK,IAAI,EAAE;QACNA,IAAI,CAACJ,MAAM,GAAGA,MAAM;MACxB;IACJ,CAAC;IACDS,iBAAiB,WAAAA,kBAACZ,KAAK,EAAEE,SAAS,EAAE;MAChCF,KAAK,CAACC,YAAY,GAAGD,KAAK,CAACC,YAAY,CAACY,MAAM,CAAC,UAAAN,IAAI;QAAA,OAAIA,IAAI,CAACL,SAAS,KAAKA,SAAS;MAAA,EAAC;IACxF;EACJ,CAAC;EACDY,OAAO,EAAE;IACLC,kBAAkB,WAAAA,mBAACf,KAAK,EAAE;MACtB,OAAOA,KAAK,CAACC,YAAY,CAACe,GAAG,CAAC,UAAAT,IAAI,EAAI;QAClC,OAAAU,aAAA,CAAAA,aAAA,KACOV,IAAI;UACPW,OAAO,EAAErB,QAAQ,CAACW,IAAI,CAAC,UAAAW,CAAC;YAAA,OAAIA,CAAC,CAACC,EAAE,KAAKb,IAAI,CAACL,SAAS;UAAA;QAAC;MAE5D,CAAC,CAAC;IACN,CAAC;IACDmB,cAAc,WAAAA,eAACrB,KAAK,EAAEc,OAAO,EAAE;MAC3B,OAAOA,OAAO,CAACC,kBAAkB,CAACO,MAAM,CAAC,UAACC,GAAG,EAAEhB,IAAI;QAAA,OAAMA,IAAI,CAACW,OAAO,CAACM,KAAK,GAAGjB,IAAI,CAACJ,MAAM,GAAIoB,GAAG;MAAA,GAAE,CAAC,CAAC;IACxG;EACJ;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}