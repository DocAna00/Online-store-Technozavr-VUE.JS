{"ast":null,"code":"import _objectSpread from \"/Users/anadoc/Desktop/Skillbox Anastasia/Skillbox Projects/vue-final-project/final_project_vue.js/project/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport { mapGetters } from \"vuex\";\nimport numberFormat from '@/helpers/numberFormat';\nexport default {\n  filters: {\n    numberFormat: numberFormat\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    orderInfo: \"orderInfo\",\n    totalPriceInfo: \"totalPriceInfo\",\n    totalPositionInfo: \"totalPositionInfo\"\n  })), {}, {\n    cartOrderInfo: function cartOrderInfo() {\n      return this.orderInfo.basket.items.map(function (item) {\n        return {\n          title: item.productOffer.title,\n          price: item.productOffer.price,\n          id: item.id,\n          quantity: item.quantity\n        };\n      });\n    }\n  }),\n  created: function created() {\n    if (this.$store.state.orderInfo && this.$store.state.orderInfo.id === this.$route.params.id) {\n      return;\n    }\n    this.$store.dispatch('loadOrderInfo', this.$route.params.id);\n  }\n};","map":{"version":3,"names":["mapGetters","numberFormat","filters","computed","_objectSpread","orderInfo","totalPriceInfo","totalPositionInfo","cartOrderInfo","basket","items","map","item","title","productOffer","price","id","quantity","created","$store","state","$route","params","dispatch"],"sources":["src/pages/OrderInfoPage.vue"],"sourcesContent":["<template>\n  <main class=\"content container\" v-if=\"orderInfo\">\n    <div class=\"content__top\">\n      <ul class=\"breadcrumbs\">\n        <li class=\"breadcrumbs__item\">\n          <router-link class=\"breadcrumbs__link\" :to=\"{ name: 'main' }\">\n            Каталог\n          </router-link>\n        </li>\n        <li class=\"breadcrumbs__item\">\n          <router-link class=\"breadcrumbs__link\" :to=\"{ name: 'cart' }\">\n            Корзина\n          </router-link>\n        </li>\n        <li class=\"breadcrumbs__item\">\n          <a class=\"breadcrumbs__link\">\n            Оформление заказа\n          </a>\n        </li>\n      </ul>\n\n      <h1 class=\"content__title\">\n        Заказ оформлен <span>№ {{ orderInfo.id }}</span>\n      </h1>\n    </div>\n\n    <section class=\"cart\">\n      <form class=\"cart__form form\" action=\"#\" method=\"POST\">\n        <div class=\"cart__field\">\n          <p class=\"cart__message\">\n            Благодарим за&nbsp;выбор нашего магазина. На&nbsp;Вашу почту придет письмо с&nbsp;деталями заказа.\n            Наши менеджеры свяжутся с&nbsp;Вами в&nbsp;течение часа для уточнения деталей доставки.\n          </p>\n\n          <ul class=\"dictionary\">\n            <li class=\"dictionary__item\">\n              <span class=\"dictionary__key\">\n                Получатель\n              </span>\n              <span class=\"dictionary__value\">\n                {{ orderInfo.name }}\n              </span>\n            </li>\n            <li class=\"dictionary__item\">\n              <span class=\"dictionary__key\">\n                Адрес доставки\n              </span>\n              <span class=\"dictionary__value\">\n                {{ orderInfo.address }}\n              </span>\n            </li>\n            <li class=\"dictionary__item\">\n              <span class=\"dictionary__key\">\n                Телефон\n              </span>\n              <span class=\"dictionary__value\">\n                {{ orderInfo.phone }}\n              </span>\n            </li>\n            <li class=\"dictionary__item\">\n              <span class=\"dictionary__key\">\n                Email\n              </span>\n              <span class=\"dictionary__value\">\n                {{ orderInfo.email }}\n              </span>\n            </li>\n            <li class=\"dictionary__item\">\n              <span class=\"dictionary__key\">\n                Способ оплаты\n              </span>\n              <span class=\"dictionary__value\">\n                {{ orderInfo.paymentType }}\n              </span>\n            </li>\n          </ul>\n        </div>\n\n        <div class=\"cart__block\">\n          <ul class=\"cart__orders\">\n            <li class=\"cart__order\" v-for=\"item in cartOrderInfo\">\n              <h3>{{ item.title }}</h3>\n              <b>{{ (item.quantity * item.price) | numberFormat }}₽</b>\n              <span>Количество: {{ item.quantity }}</span>\n              <span>Артикул: {{ product.productOffer.id }}</span>\n            </li>\n          </ul>\n\n          <div class=\"cart__total\">\n            <p>Доставка: <b>{{ orderInfo.deliveryType.price }} ₽</b></p>\n            <p>Итого: <b>{{ totalPositionInfo }}</b> товар(а) на сумму <b>{{ (totalPriceInfo +\n              Number(orderInfo.deliveryType.price))\n              | numberFormat }} ₽</b></p>\n          </div>\n        </div>\n      </form>\n    </section>\n  </main>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\nimport numberFormat from '@/helpers/numberFormat';\n\nexport default {\n  filters: {\n    numberFormat\n  },\n  computed: {\n    ...mapGetters({\n      orderInfo: \"orderInfo\",\n      totalPriceInfo: \"totalPriceInfo\",\n      totalPositionInfo: \"totalPositionInfo\"\n    }),\n    cartOrderInfo() {\n      return this.orderInfo.basket.items.map(item => ({\n        title: item.productOffer.title,\n        price: item.productOffer.price,\n        id: item.id,\n        quantity: item.quantity\n      }));\n    }\n  },\n  created() {\n    if (this.$store.state.orderInfo && this.$store.state.orderInfo.id === this.$route.params.id) {\n      return;\n    }\n\n    this.$store.dispatch('loadOrderInfo', this.$route.params.id);\n  }\n}\n</script>"],"mappings":";;AAqGA,SAAAA,UAAA;AACA,OAAAC,YAAA;AAEA;EACAC,OAAA;IACAD,YAAA,EAAAA;EACA;EACAE,QAAA,EAAAC,aAAA,CAAAA,aAAA,KACAJ,UAAA;IACAK,SAAA;IACAC,cAAA;IACAC,iBAAA;EACA;IACAC,aAAA,WAAAA,cAAA;MACA,YAAAH,SAAA,CAAAI,MAAA,CAAAC,KAAA,CAAAC,GAAA,WAAAC,IAAA;QAAA;UACAC,KAAA,EAAAD,IAAA,CAAAE,YAAA,CAAAD,KAAA;UACAE,KAAA,EAAAH,IAAA,CAAAE,YAAA,CAAAC,KAAA;UACAC,EAAA,EAAAJ,IAAA,CAAAI,EAAA;UACAC,QAAA,EAAAL,IAAA,CAAAK;QACA;MAAA;IACA;EAAA,EACA;EACAC,OAAA,WAAAA,QAAA;IACA,SAAAC,MAAA,CAAAC,KAAA,CAAAf,SAAA,SAAAc,MAAA,CAAAC,KAAA,CAAAf,SAAA,CAAAW,EAAA,UAAAK,MAAA,CAAAC,MAAA,CAAAN,EAAA;MACA;IACA;IAEA,KAAAG,MAAA,CAAAI,QAAA,uBAAAF,MAAA,CAAAC,MAAA,CAAAN,EAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}