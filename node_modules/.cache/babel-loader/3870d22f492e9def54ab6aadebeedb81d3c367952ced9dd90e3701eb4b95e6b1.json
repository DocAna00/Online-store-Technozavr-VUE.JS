{"ast":null,"code":"import _defineProperty from \"/Users/anadoc/Desktop/Skillbox Anastasia/Skillbox Projects/vue-final-project/final_project_vue.js/project/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/anadoc/Desktop/Skillbox Anastasia/Skillbox Projects/vue-final-project/final_project_vue.js/project/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/web.timers.js\";\nimport ProductList from '@/components/ProductList.vue';\nimport BasePaginatioan from '@/components/BasePaginatioan.vue';\nimport ProductFilter from '@/components/ProductFilter.vue';\nimport axios from 'axios';\nimport { API_BASE_URL } from '@/config';\nimport countProductsOnPage from '@/helpers/countProductsOnPage';\nexport default {\n  components: {\n    ProductList: ProductList,\n    BasePaginatioan: BasePaginatioan,\n    ProductFilter: ProductFilter\n  },\n  data: function data() {\n    return {\n      filterPriceFrom: null,\n      filterPriceTo: null,\n      filterCategoryId: 0,\n      // filterColorId: [],\n      // filterPropId: [],\n      // filterPropName: null,\n      page: 1,\n      productsPerPage: 12,\n      productsData: null,\n      productsLoading: false,\n      productsLoadingFailed: false,\n      filterCategoryMainPropSlug: '',\n      filterSku: []\n    };\n  },\n  props: ['categoryId'],\n  computed: {\n    // products() {\n    //   function filterColors(a, b) {\n    //     let result = a.reduce((acc, item) => {\n    //       acc.push(b.includes(item.color.id));\n    //       return acc;\n    //     }, []);\n    //     return result.includes(true);\n    //   }\n    //   let data = this.productsData\n    //     ? this.productsData.items.map(product => {\n    //       return {\n    //         ...product,\n    //         image: product.preview.file.url\n    //       };\n    //     })\n    //     : [];\n    //   return this.filterColorId.length > 0\n    //     ? data.filter(item => filterColors(item.colors, this.filterColorId))\n    //     : data;\n    // },\n    products: function products() {\n      return this.productsData ? this.productsData.items.map(function (prod) {\n        return _objectSpread(_objectSpread({}, product), {}, {\n          image: product.preview.file.url\n        });\n      }) : [];\n    },\n    countProducts: function countProducts() {\n      return this.productsData ? this.productsData.pagination.total : 0;\n    },\n    // filterName() {\n    //   return this.filterPropName ? `props[${this.filterPropName}]` : null;\n    // }\n    inputCategoryId: function inputCategoryId() {\n      return this.categoryId ? this.categoryId : null;\n    }\n  },\n  methods: {\n    countProductsOnPage: countProductsOnPage,\n    categorySelect: function categorySelect() {\n      if (this.$route.query.category) {\n        this.filterCategoryId = Number(this.$route.query.category);\n      }\n    },\n    loadProducts: function loadProducts() {\n      var _this = this;\n      this.productsLoading = true;\n      this.productsLoadingFailed = false;\n      clearTimeout(this.loadProductsTimer);\n      this.loadProductsTimer = setTimeout(function () {\n        axios.get(API_BASE_URL + \"/api/products\", {\n          params: _defineProperty({\n            categoryId: _this.filterCategoryId,\n            page: _this.page,\n            limit: _this.productsPerPage,\n            minPrice: _this.filterPriceFrom,\n            maxPrice: _this.filterPriceTo\n          }, _this.filterName, _this.filterPropId)\n        }).then(function (response) {\n          return _this.productsData = response.data;\n        })[\"catch\"](function () {\n          return _this.productsLoadingFailed = true;\n        }).then(function () {\n          return _this.productsLoading = false;\n        });\n      }, 0);\n    }\n  },\n  watch: {\n    page: function page() {\n      this.loadProducts();\n    },\n    filterPriceFrom: function filterPriceFrom() {\n      this.loadProducts();\n    },\n    filterPriceTo: function filterPriceTo() {\n      this.loadProducts();\n    },\n    filterCategoryId: function filterCategoryId() {\n      this.loadProducts();\n    },\n    filterColorId: function filterColorId() {\n      this.loadProducts();\n    },\n    filterPropId: function filterPropId() {\n      this.loadProducts();\n    }\n  },\n  created: function created() {\n    this.loadProducts();\n    this.categorySelect();\n  }\n};","map":{"version":3,"names":["ProductList","BasePaginatioan","ProductFilter","axios","API_BASE_URL","countProductsOnPage","components","data","filterPriceFrom","filterPriceTo","filterCategoryId","page","productsPerPage","productsData","productsLoading","productsLoadingFailed","filterCategoryMainPropSlug","filterSku","props","computed","products","items","map","prod","_objectSpread","product","image","preview","file","url","countProducts","pagination","total","inputCategoryId","categoryId","methods","categorySelect","$route","query","category","Number","loadProducts","_this","clearTimeout","loadProductsTimer","setTimeout","get","params","_defineProperty","limit","minPrice","maxPrice","filterName","filterPropId","then","response","watch","filterColorId","created"],"sources":["src/pages/MainPage.vue"],"sourcesContent":["<template>\n  <main class=\"content container\">\n    <div class=\"content__top content__top--catalog\">\n      <h1 class=\"content__title\">\n        Каталог\n      </h1>\n      <span class=\"content__info\">\n        {{ countProducts + \" \" + countProductsOnPage(countProducts) }}\n      </span>\n    </div>\n    <div class=\"content__catalog\">\n      <ProductFilter :price-from.sync=\"filterPriceFrom\" :price-to.sync=\"filterPriceTo\"\n        :category-id.sync=\"filterCategoryId\" :color-id.sync=\"filterColorId\" :prop-id.sync=\"filterPropId\"\n        :prop-name.sync=\"filterPropName\"></ProductFilter>\n      <section class=\"catalog\">\n        <div v-if=\"productsLoading\" style=\"font-size: 25px; text-align: center\"><img src=\"../1488.gif\"\n            style=\"vertical-align: middle; padding-right: 5px\">Загрузка товаров...</div>\n        <div v-if=\"productsLoadingFailed\">Произошла ошибка при загрузке товаров\n          <button @click.prevent=\"loadProducts\">Перезагрузить страницу</button>\n        </div>\n        <ProductList :products=\"products\"></ProductList>\n        <BasePaginatioan v-model=\"page\" :count=\"countProducts\" :per-page=\"productsPerPage\"></BasePaginatioan>\n      </section>\n\n    </div>\n  </main>\n</template>\n\n<script>\nimport ProductList from '@/components/ProductList.vue';\nimport BasePaginatioan from '@/components/BasePaginatioan.vue';\nimport ProductFilter from '@/components/ProductFilter.vue';\nimport axios from 'axios';\nimport { API_BASE_URL } from '@/config';\nimport countProductsOnPage from '@/helpers/countProductsOnPage';\n\nexport default {\n  components: { ProductList, BasePaginatioan, ProductFilter },\n  data() {\n    return {\n      filterPriceFrom: null,\n      filterPriceTo: null,\n      filterCategoryId: 0,\n      // filterColorId: [],\n      // filterPropId: [],\n      // filterPropName: null,\n      page: 1,\n      productsPerPage: 12,\n      productsData: null,\n      productsLoading: false,\n      productsLoadingFailed: false,\n      filterCategoryMainPropSlug: '',\n      filterSku: []\n    }\n  },\n  props: ['categoryId'],\n  computed: {\n    // products() {\n    //   function filterColors(a, b) {\n    //     let result = a.reduce((acc, item) => {\n    //       acc.push(b.includes(item.color.id));\n    //       return acc;\n    //     }, []);\n    //     return result.includes(true);\n    //   }\n    //   let data = this.productsData\n    //     ? this.productsData.items.map(product => {\n    //       return {\n    //         ...product,\n    //         image: product.preview.file.url\n    //       };\n    //     })\n    //     : [];\n    //   return this.filterColorId.length > 0\n    //     ? data.filter(item => filterColors(item.colors, this.filterColorId))\n    //     : data;\n    // },\n    products() {\n      return this.productsData\n        ? this.productsData.items.map((prod) => ({\n          ...product,\n          image: product.preview.file.url,\n        }))\n        : [];\n    },\n    countProducts() {\n      return this.productsData ? this.productsData.pagination.total : 0;\n    },\n    // filterName() {\n    //   return this.filterPropName ? `props[${this.filterPropName}]` : null;\n    // }\n    inputCategoryId() {\n      return this.categoryId ? this.categoryId : null;\n    }\n  },\n  methods: {\n    countProductsOnPage,\n    categorySelect() {\n      if (this.$route.query.category) {\n        this.filterCategoryId = Number(this.$route.query.category);\n      }\n    },\n    loadProducts() {\n      this.productsLoading = true;\n      this.productsLoadingFailed = false;\n\n      clearTimeout(this.loadProductsTimer);\n      this.loadProductsTimer = setTimeout(() => {\n        axios.get(API_BASE_URL + `/api/products`, {\n          params: {\n            categoryId: this.filterCategoryId,\n            page: this.page,\n            limit: this.productsPerPage,\n            minPrice: this.filterPriceFrom,\n            maxPrice: this.filterPriceTo,\n            [this.filterName]: this.filterPropId\n          }\n        })\n          .then(response => this.productsData = response.data)\n          .catch(() => this.productsLoadingFailed = true)\n          .then(() => this.productsLoading = false);\n      }, 0);\n    }\n  },\n  watch: {\n    page() {\n      this.loadProducts();\n    },\n    filterPriceFrom() {\n      this.loadProducts();\n    },\n    filterPriceTo() {\n      this.loadProducts();\n    },\n    filterCategoryId() {\n      this.loadProducts();\n    },\n    filterColorId() {\n      this.loadProducts();\n    },\n    filterPropId() {\n      this.loadProducts();\n    }\n  },\n  created() {\n    this.loadProducts();\n    this.categorySelect();\n  }\n}\n</script>"],"mappings":";;;;;AA6BA,OAAAA,WAAA;AACA,OAAAC,eAAA;AACA,OAAAC,aAAA;AACA,OAAAC,KAAA;AACA,SAAAC,YAAA;AACA,OAAAC,mBAAA;AAEA;EACAC,UAAA;IAAAN,WAAA,EAAAA,WAAA;IAAAC,eAAA,EAAAA,eAAA;IAAAC,aAAA,EAAAA;EAAA;EACAK,IAAA,WAAAA,KAAA;IACA;MACAC,eAAA;MACAC,aAAA;MACAC,gBAAA;MACA;MACA;MACA;MACAC,IAAA;MACAC,eAAA;MACAC,YAAA;MACAC,eAAA;MACAC,qBAAA;MACAC,0BAAA;MACAC,SAAA;IACA;EACA;EACAC,KAAA;EACAC,QAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,QAAA,WAAAA,SAAA;MACA,YAAAP,YAAA,GACA,KAAAA,YAAA,CAAAQ,KAAA,CAAAC,GAAA,WAAAC,IAAA;QAAA,OAAAC,aAAA,CAAAA,aAAA,KACAC,OAAA;UACAC,KAAA,EAAAD,OAAA,CAAAE,OAAA,CAAAC,IAAA,CAAAC;QAAA;MAAA,CACA,IACA;IACA;IACAC,aAAA,WAAAA,cAAA;MACA,YAAAjB,YAAA,QAAAA,YAAA,CAAAkB,UAAA,CAAAC,KAAA;IACA;IACA;IACA;IACA;IACAC,eAAA,WAAAA,gBAAA;MACA,YAAAC,UAAA,QAAAA,UAAA;IACA;EACA;EACAC,OAAA;IACA9B,mBAAA,EAAAA,mBAAA;IACA+B,cAAA,WAAAA,eAAA;MACA,SAAAC,MAAA,CAAAC,KAAA,CAAAC,QAAA;QACA,KAAA7B,gBAAA,GAAA8B,MAAA,MAAAH,MAAA,CAAAC,KAAA,CAAAC,QAAA;MACA;IACA;IACAE,YAAA,WAAAA,aAAA;MAAA,IAAAC,KAAA;MACA,KAAA5B,eAAA;MACA,KAAAC,qBAAA;MAEA4B,YAAA,MAAAC,iBAAA;MACA,KAAAA,iBAAA,GAAAC,UAAA;QACA1C,KAAA,CAAA2C,GAAA,CAAA1C,YAAA;UACA2C,MAAA,EAAAC,eAAA;YACAd,UAAA,EAAAQ,KAAA,CAAAhC,gBAAA;YACAC,IAAA,EAAA+B,KAAA,CAAA/B,IAAA;YACAsC,KAAA,EAAAP,KAAA,CAAA9B,eAAA;YACAsC,QAAA,EAAAR,KAAA,CAAAlC,eAAA;YACA2C,QAAA,EAAAT,KAAA,CAAAjC;UAAA,GACAiC,KAAA,CAAAU,UAAA,EAAAV,KAAA,CAAAW,YAAA;QAEA,GACAC,IAAA,WAAAC,QAAA;UAAA,OAAAb,KAAA,CAAA7B,YAAA,GAAA0C,QAAA,CAAAhD,IAAA;QAAA,WACA;UAAA,OAAAmC,KAAA,CAAA3B,qBAAA;QAAA,GACAuC,IAAA;UAAA,OAAAZ,KAAA,CAAA5B,eAAA;QAAA;MACA;IACA;EACA;EACA0C,KAAA;IACA7C,IAAA,WAAAA,KAAA;MACA,KAAA8B,YAAA;IACA;IACAjC,eAAA,WAAAA,gBAAA;MACA,KAAAiC,YAAA;IACA;IACAhC,aAAA,WAAAA,cAAA;MACA,KAAAgC,YAAA;IACA;IACA/B,gBAAA,WAAAA,iBAAA;MACA,KAAA+B,YAAA;IACA;IACAgB,aAAA,WAAAA,cAAA;MACA,KAAAhB,YAAA;IACA;IACAY,YAAA,WAAAA,aAAA;MACA,KAAAZ,YAAA;IACA;EACA;EACAiB,OAAA,WAAAA,QAAA;IACA,KAAAjB,YAAA;IACA,KAAAL,cAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}