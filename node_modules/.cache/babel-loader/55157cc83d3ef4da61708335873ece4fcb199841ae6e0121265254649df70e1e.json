{"ast":null,"code":"export default {\n  model: {\n    prop: 'page',\n    event: 'paginate'\n  },\n  props: ['page', 'count', 'perPage'],\n  computed: {\n    pages: function pages() {\n      return Math.ceil(this.count / this.perPage);\n    }\n  },\n  methods: {\n    paginate: function paginate(page) {\n      this.$emit('paginate', page);\n    },\n    previousPage: function previousPage(page) {\n      this.$emit('paginate', page - 1);\n    },\n    nextPage: function nextPage(page) {\n      this.$emit('paginate', page + 1);\n    }\n  }\n};","map":{"version":3,"names":["model","prop","event","props","computed","pages","Math","ceil","count","perPage","methods","paginate","page","$emit","previousPage","nextPage"],"sources":["src/components/BasePaginatioan.vue"],"sourcesContent":["<template>\n    <ul class=\"catalog__pagination pagination\">\n        <li class=\"pagination__item\">\n            <a href=\"#\" class=\"pagination__link pagination__link--arrow\" aria-label=\"Предыдущая страница\"  @click.prevent=\"previousPage(page)\" :c>\n                <svg width=\"8\" height=\"14\" fill=\"currentColor\">\n                    <use xlink:href=\"#icon-arrow-left\"></use>\n                </svg>\n            </a>\n        </li>\n        <li class=\"pagination__item\" v-for=\"pageNumber in pages\" :key=\"pageNumber\">\n            <a href=\"#\" class=\"pagination__link\" :class=\"{ 'pagination__link--current': pageNumber === page }\"\n                @click.prevent=\"paginate(pageNumber)\">\n                {{ pageNumber }}\n            </a>\n        </li>\n        <li class=\"pagination__item\">\n            <a href=\"#\" class=\"pagination__link pagination__link--arrow\" aria-label=\"Следующая страница\"  @click.prevent=\"nextPage(page)\">\n                <svg width=\"8\" height=\"14\" fill=\"currentColor\">\n                    <use xlink:href=\"#icon-arrow-right\"></use>\n                </svg>\n            </a>\n        </li>\n    </ul>\n</template>\n\n<script>\nexport default {\n    model: {\n        prop: 'page',\n        event: 'paginate'\n    },\n    props: ['page', 'count', 'perPage'],\n    computed: {\n        pages() {\n            return Math.ceil(this.count / this.perPage);\n        }\n    },\n    methods: {\n        paginate(page) {\n            this.$emit('paginate', page);\n        },\n        previousPage(page) {\n            this.$emit('paginate', page - 1);\n        },\n        nextPage(page) {\n            this.$emit('paginate', page + 1);\n        }\n    }\n}\n</script>"],"mappings":"AA0BA;EACAA,KAAA;IACAC,IAAA;IACAC,KAAA;EACA;EACAC,KAAA;EACAC,QAAA;IACAC,KAAA,WAAAA,MAAA;MACA,OAAAC,IAAA,CAAAC,IAAA,MAAAC,KAAA,QAAAC,OAAA;IACA;EACA;EACAC,OAAA;IACAC,QAAA,WAAAA,SAAAC,IAAA;MACA,KAAAC,KAAA,aAAAD,IAAA;IACA;IACAE,YAAA,WAAAA,aAAAF,IAAA;MACA,KAAAC,KAAA,aAAAD,IAAA;IACA;IACAG,QAAA,WAAAA,SAAAH,IAAA;MACA,KAAAC,KAAA,aAAAD,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}