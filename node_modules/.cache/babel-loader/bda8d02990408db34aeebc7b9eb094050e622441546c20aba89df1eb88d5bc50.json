{"ast":null,"code":"import _objectSpread from \"/Users/anadoc/Desktop/Skillbox Anastasia/Skillbox Projects/Vue.js Shop/Vue.js/06_basket/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport numberFormat from '@/helpers/numberFormat';\nimport { mapMutations } from 'vuex';\nimport CartAmountButtons from './CartAmountButtons.vue';\nexport default {\n  filters: {\n    numberFormat: numberFormat\n  },\n  components: {\n    CartAmountButtons: CartAmountButtons\n  },\n  props: ['item', 'productAmount'],\n  computed: {\n    amount: {\n      get: function get() {\n        return this.item.amount;\n      },\n      set: function set(value) {\n        this.$store.commit('updateCartProductAmount', {\n          productId: this.item.productId,\n          amount: value\n        });\n      }\n    }\n  },\n  methods: _objectSpread(_objectSpread({}, mapMutations({\n    deleteProduct: 'deleteCartProduct'\n  })), {}, {\n    counterDecrease: function counterDecrease() {\n      if (this.productAmount > 1) {\n        this.$emit(\"update:productAmount\", this.productAmount - 1);\n      }\n    },\n    counterIncrease: function counterIncrease() {\n      this.$emit(\"update:productAmount\", this.productAmount + 1);\n    }\n  })\n};","map":{"version":3,"names":["numberFormat","mapMutations","CartAmountButtons","filters","components","props","computed","amount","get","item","set","value","$store","commit","productId","methods","_objectSpread","deleteProduct","counterDecrease","productAmount","$emit","counterIncrease"],"sources":["src/components/CartItem.vue"],"sourcesContent":["<template>\n    <li class=\"cart__item product\">\n        <div class=\"product__pic\">\n            <img :src=\"item.product.image\" width=\"120\" height=\"120\" :alt=\"item.product.title\">\n        </div>\n        <h3 class=\"product__title\">\n            {{ item.product.title }}\n        </h3>\n        <span class=\"product__code\">\n            Артикул: {{ item.product.id }}\n        </span>\n<CartAmountButtons :productAmount.sync=\"productAmount\" :class=\"product__counter\"></CartAmountButtons>\n        <!-- <div class=\"product__counter form__counter\">\n            <button type=\"button\" aria-label=\"Убрать один товар\">\n                <svg width=\"10\" height=\"10\" fill=\"currentColor\">\n                    <use xlink:href=\"#icon-minus\"></use>\n                </svg>\n            </button>\n\n            <input type=\"text\" v-model.number=\"amount\" name=\"count\">\n\n            <button type=\"button\" aria-label=\"Добавить один товар\">\n                <svg width=\"10\" height=\"10\" fill=\"currentColor\">\n                    <use xlink:href=\"#icon-plus\"></use>\n                </svg>\n            </button>\n        </div> -->\n\n        <b class=\"product__price\">\n            {{ (item.amount * item.product.price) | numberFormat }} ₽\n        </b>\n\n        <button class=\"product__del button-del\" type=\"button\" aria-label=\"Удалить товар из корзины\"\n            @click.prevent=\"deleteProduct(item.productId)\">\n            <svg width=\"20\" height=\"20\" fill=\"currentColor\">\n                <use xlink:href=\"#icon-close\"></use>\n            </svg>\n        </button>\n    </li>\n</template>\n\n<script>\nimport numberFormat from '@/helpers/numberFormat';\nimport { mapMutations } from 'vuex';\nimport CartAmountButtons from './CartAmountButtons.vue';\n\nexport default {\n    filters: { numberFormat },\n    components: {CartAmountButtons},\n    props: ['item', 'productAmount'],\n    computed: {\n        amount: {\n            get() {\n                return this.item.amount;\n            },\n            set(value) {\n                this.$store.commit('updateCartProductAmount', { productId: this.item.productId, amount: value });\n            }\n        }\n    },\n    methods: {\n        ...mapMutations({ deleteProduct: 'deleteCartProduct' }),\n        counterDecrease() {\n            if (this.productAmount > 1) {\n              this.$emit(\"update:productAmount\", this.productAmount - 1);\n            }\n        },\n        counterIncrease() {\n            this.$emit(\"update:productAmount\", this.productAmount + 1);\n        }\n    }\n}\n</script>"],"mappings":";AA0CA,OAAAA,YAAA;AACA,SAAAC,YAAA;AACA,OAAAC,iBAAA;AAEA;EACAC,OAAA;IAAAH,YAAA,EAAAA;EAAA;EACAI,UAAA;IAAAF,iBAAA,EAAAA;EAAA;EACAG,KAAA;EACAC,QAAA;IACAC,MAAA;MACAC,GAAA,WAAAA,IAAA;QACA,YAAAC,IAAA,CAAAF,MAAA;MACA;MACAG,GAAA,WAAAA,IAAAC,KAAA;QACA,KAAAC,MAAA,CAAAC,MAAA;UAAAC,SAAA,OAAAL,IAAA,CAAAK,SAAA;UAAAP,MAAA,EAAAI;QAAA;MACA;IACA;EACA;EACAI,OAAA,EAAAC,aAAA,CAAAA,aAAA,KACAf,YAAA;IAAAgB,aAAA;EAAA;IACAC,eAAA,WAAAA,gBAAA;MACA,SAAAC,aAAA;QACA,KAAAC,KAAA,8BAAAD,aAAA;MACA;IACA;IACAE,eAAA,WAAAA,gBAAA;MACA,KAAAD,KAAA,8BAAAD,aAAA;IACA;EAAA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}