{"ast":null,"code":"import gotoPage from '@/helpers/gotoPage';\nimport numberFormat from '@/helpers/numberFormat';\nimport CartAmountButtons from '@/components/CartAmountButtons.vue';\nimport axios from 'axios';\nimport { API_BASE_URL } from '@/config';\nexport default {\n  data: function data() {\n    return {\n      productAmount: 1,\n      productData: null,\n      productLoading: false,\n      productLoadingFailed: false\n    };\n  },\n  components: {\n    CartAmountButtons: CartAmountButtons\n  },\n  filters: {\n    numberFormat: numberFormat\n  },\n  computed: {\n    product: function product() {\n      return this.productData;\n    },\n    category: function category() {\n      return this.productData.category;\n    }\n  },\n  methods: {\n    gotoPage: gotoPage,\n    addToCart: function addToCart() {\n      this.$store.commit('addProductToCart', {\n        productId: this.product.id,\n        amount: this.productAmount\n      });\n    },\n    loadProduct: function loadProduct() {\n      var _this = this;\n      this.productLoading = true;\n      this.productLoadingFailed = false;\n      axios.get(API_BASE_URL + '/api/products/' + this.$route.params.id).then(function (response) {\n        return _this.productData = response.data;\n      })[\"catch\"](function () {\n        return _this.productLoadingFailed = true;\n      }).then(function () {\n        return _this.productLoading = false;\n      });\n    }\n  },\n  created: function created() {\n    this.loadProduct();\n  }\n};","map":{"version":3,"names":["gotoPage","numberFormat","CartAmountButtons","axios","API_BASE_URL","data","productAmount","productData","productLoading","productLoadingFailed","components","filters","computed","product","category","methods","addToCart","$store","commit","productId","id","amount","loadProduct","_this","get","$route","params","then","response","created"],"sources":["src/pages/ProductPage.vue"],"sourcesContent":["<template>\n     <main class=\"content container\" v-if=\"productLoading\">Загрузка товара...</main>\n     <main class=\"content container\" v-else-if=\"!productData\">Не удалось загрузить товар</main>\n    <main class=\"content container\" v-=\"productData\">\n        <div class=\"content__top\">\n            <ul class=\"breadcrumbs\">\n                <li class=\"breadcrumbs__item\">\n                    <router-link class=\"breadcrumbs__link\" :to=\"{ name: 'main' }\">\n                        Каталог\n                    </router-link>\n                </li>\n                <li class=\"breadcrumbs__item\">\n                    <router-link class=\"breadcrumbs__link\" :to=\"{ name: 'main' }\">\n                        {{ category.title }}\n                    </router-link>\n                </li>\n                <li class=\"breadcrumbs__item\">\n                    <a class=\"breadcrumbs__link\">\n                        {{ product.title }}\n                    </a>\n                </li>\n            </ul>\n        </div>\n\n        <section class=\"item\">\n            <div class=\"item__pics pics\">\n                <div class=\"pics__wrapper\">\n                    <img width=\"570\" height=\"570\" :src=\"product.image\" :alt=\"product.title\">\n                </div>\n            </div>\n\n            <div class=\"item__info\">\n                <span class=\"item__code\">Артикул: {{ product.id }}</span>\n                <h2 class=\"item__title\">\n                    {{ product.title }}\n                </h2>\n                <div class=\"item__form\">\n                    <form class=\"form\" action=\"#\" method=\"POST\" @submit.prevent=\"addToCart\">\n                        <b class=\"item__price\">\n                            {{ product.price | numberFormat }} ₽\n                        </b>\n\n                        <fieldset class=\"form__block\">\n                            <legend class=\"form__legend\">Цвет:</legend>\n                            <ul class=\"colors\">\n                                <li class=\"colors__item\">\n                                    <label class=\"colors__label\">\n                                        <input class=\"colors__radio sr-only\" type=\"radio\" name=\"color-item\" value=\"blue\"\n                                            checked=\"\">\n                                        <span class=\"colors__value\" style=\"background-color: #73B6EA;\">\n                                        </span>\n                                    </label>\n                                </li>\n                                <li class=\"colors__item\">\n                                    <label class=\"colors__label\">\n                                        <input class=\"colors__radio sr-only\" type=\"radio\" name=\"color-item\" value=\"yellow\">\n                                        <span class=\"colors__value\" style=\"background-color: #FFBE15;\">\n                                        </span>\n                                    </label>\n                                </li>\n                                <li class=\"colors__item\">\n                                    <label class=\"colors__label\">\n                                        <input class=\"colors__radio sr-only\" type=\"radio\" name=\"color-item\" value=\"gray\">\n                                        <span class=\"colors__value\" style=\"background-color: #939393;\">\n                                        </span></label>\n                                </li>\n                            </ul>\n                        </fieldset>\n\n                        <fieldset class=\"form__block\">\n                            <legend class=\"form__legend\">Объемб в ГБ:</legend>\n\n                            <ul class=\"sizes sizes--primery\">\n                                <li class=\"sizes__item\">\n                                    <label class=\"sizes__label\">\n                                        <input class=\"sizes__radio sr-only\" type=\"radio\" name=\"sizes-item\" value=\"32\">\n                                        <span class=\"sizes__value\">\n                                            32gb\n                                        </span>\n                                    </label>\n                                </li>\n                                <li class=\"sizes__item\">\n                                    <label class=\"sizes__label\">\n                                        <input class=\"sizes__radio sr-only\" type=\"radio\" name=\"sizes-item\" value=\"64\">\n                                        <span class=\"sizes__value\">\n                                            64gb\n                                        </span>\n                                    </label>\n                                </li>\n                                <li class=\"sizes__item\">\n                                    <label class=\"sizes__label\">\n                                        <input class=\"sizes__radio sr-only\" type=\"radio\" name=\"sizes-item\" value=\"128\"\n                                            checked=\"\">\n                                        <span class=\"sizes__value\">\n                                            128gb\n                                        </span>\n                                    </label>\n                                </li>\n                            </ul>\n                        </fieldset>\n\n                        <div class=\"item__row\">\n                            <CartAmountButtons :productAmount.sync=\"productAmount\"></CartAmountButtons>\n                            <button class=\"button button--primery\" type=\"submit\">\n                                В корзину\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n\n            <div class=\"item__desc\">\n                <ul class=\"tabs\">\n                    <li class=\"tabs__item\">\n                        <a class=\"tabs__link tabs__link--current\">\n                            Описание\n                        </a>\n                    </li>\n                    <li class=\"tabs__item\">\n                        <a class=\"tabs__link\" href=\"#\">\n                            Характеристики\n                        </a>\n                    </li>\n                    <li class=\"tabs__item\">\n                        <a class=\"tabs__link\" href=\"#\">\n                            Гарантия\n                        </a>\n                    </li>\n                    <li class=\"tabs__item\">\n                        <a class=\"tabs__link\" href=\"#\">\n                            Оплата и доставка\n                        </a>\n                    </li>\n                </ul>\n\n                <div class=\"item__content\">\n                    <p>\n                        Навигация GPS, ГЛОНАСС, BEIDOU Galileo и QZSS<br>\n                        Синхронизация со смартфоном<br>\n                        Связь по Bluetooth Smart, ANT+ и Wi-Fi<br>\n                        Поддержка сторонних приложений<br>\n                    </p>\n\n                    <a href=\"#\">\n                        Все характеристики\n                    </a>\n\n                    <h3>Что это?</h3>\n\n                    <p>\n                        Wahoo ELEMNT BOLT GPS – это велокомпьютер, который позволяет оптимизировать свои велотренировки,\n                        сделав их максимально эффективными. Wahoo ELEMNT BOLT GPS синхронизируется с датчиками по ANT+,\n                        объединяя полученную с них информацию. Данные отображаются на дисплее, а также сохраняются на\n                        смартфоне. При этом на мобильное устройство можно установить как фирменное приложение, так и\n                        различные приложения сторонних разработчиков. Велокомпьютер точно отслеживает местоположение,\n                        принимая сигнал с целого комплекса спутников. Эта информация позволяет смотреть уже преодоленные\n                        маршруты и планировать новые велопрогулки.\n                    </p>\n\n                    <h3>Дизайн</h3>\n\n                    <p>\n                        Велокомпьютер Wahoo ELEMNT BOLT очень компактный. Размеры устройства составляют всего 74,6 x 47,3 x\n                        22,1 мм. что не превышает габариты смартфона. Корпус гаджета выполнен из черного пластика.\n                        На обращенной к пользователю стороне расположен дисплей диагональю 56 мм. На дисплей выводятся\n                        координаты и скорость, а также полученная со смартфона и синхронизированных датчиков информация:\n                        интенсивность, скорость вращения педалей, пульс и т.д. (датчики не входят в комплект поставки).\n                        Корпус велокомпьютера имеет степень защиты от влаги IPX7. Это означает, что устройство не боится\n                        пыли, а также выдерживает кратковременное (до 30 минут) погружение в воду на глубину не более\n                        1 метра.\n                    </p>\n                </div>\n            </div>\n        </section>\n    </main>\n</template>\n\n<script>\nimport gotoPage from '@/helpers/gotoPage';\nimport numberFormat from '@/helpers/numberFormat';\nimport CartAmountButtons from '@/components/CartAmountButtons.vue';\nimport axios from 'axios';\nimport { API_BASE_URL } from '@/config';\n\nexport default {\n    data() {\n        return {\n            productAmount: 1,\n            productData: null,\n            productLoading: false,\n            productLoadingFailed: false\n        }\n    },\n    components: { CartAmountButtons },\n    filters: {\n        numberFormat\n    },\n    computed: {\n        product() {\n            return this.productData;\n        },\n        category() {\n            return this.productData.category;\n        }\n    },\n    methods: {\n        gotoPage,\n        addToCart() {\n            this.$store.commit(\n                'addProductToCart',\n                { productId: this.product.id, amount: this.productAmount }\n            );\n        },\n        loadProduct() {\n            this.productLoading = true;\n            this.productLoadingFailed = false;\n            axios.get(API_BASE_URL + '/api/products/' + this.$route.params.id)\n            .then(response => this.productData = response.data)\n            .catch(() => this.productLoadingFailed = true)\n            .then(() => this.productLoading = false);\n        }\n    },\n    created() {\n        this.loadProduct();\n    }\n}\n</script>"],"mappings":"AAkLA,OAAAA,QAAA;AACA,OAAAC,YAAA;AACA,OAAAC,iBAAA;AACA,OAAAC,KAAA;AACA,SAAAC,YAAA;AAEA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,aAAA;MACAC,WAAA;MACAC,cAAA;MACAC,oBAAA;IACA;EACA;EACAC,UAAA;IAAAR,iBAAA,EAAAA;EAAA;EACAS,OAAA;IACAV,YAAA,EAAAA;EACA;EACAW,QAAA;IACAC,OAAA,WAAAA,QAAA;MACA,YAAAN,WAAA;IACA;IACAO,QAAA,WAAAA,SAAA;MACA,YAAAP,WAAA,CAAAO,QAAA;IACA;EACA;EACAC,OAAA;IACAf,QAAA,EAAAA,QAAA;IACAgB,SAAA,WAAAA,UAAA;MACA,KAAAC,MAAA,CAAAC,MAAA,CACA,oBACA;QAAAC,SAAA,OAAAN,OAAA,CAAAO,EAAA;QAAAC,MAAA,OAAAf;MAAA,CACA;IACA;IACAgB,WAAA,WAAAA,YAAA;MAAA,IAAAC,KAAA;MACA,KAAAf,cAAA;MACA,KAAAC,oBAAA;MACAN,KAAA,CAAAqB,GAAA,CAAApB,YAAA,2BAAAqB,MAAA,CAAAC,MAAA,CAAAN,EAAA,EACAO,IAAA,WAAAC,QAAA;QAAA,OAAAL,KAAA,CAAAhB,WAAA,GAAAqB,QAAA,CAAAvB,IAAA;MAAA,WACA;QAAA,OAAAkB,KAAA,CAAAd,oBAAA;MAAA,GACAkB,IAAA;QAAA,OAAAJ,KAAA,CAAAf,cAAA;MAAA;IACA;EACA;EACAqB,OAAA,WAAAA,QAAA;IACA,KAAAP,WAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}