{"ast":null,"code":"import numberFormat from '@/helpers/numberFormat';\n// import { mapGetters } from 'vuex';\n\nexport default {\n  filters: {\n    numberFormat: numberFormat\n  },\n  computed: {\n    // ...mapGetters({ products: 'orderBasketInfo', totalPrice: 'cartTotalPrice' }),\n    orderInfo: function orderInfo() {\n      return this.$store.state.orderInfo ? this.$store.state.orderInfo : {};\n    }\n  },\n  created: function created() {\n    if (this.$store.state.orderInfo && this.$store.state.orderInfo.id === this.$router.params.id) {\n      return;\n    }\n    this.$store.dispatch('loadOrderInfo', this.$router.params.id);\n  }\n};","map":{"version":3,"names":["numberFormat","filters","computed","orderInfo","$store","state","created","id","$router","params","dispatch"],"sources":["src/pages/OrderInfoPage.vue"],"sourcesContent":["<template>\n  <main class=\"content container\">\n    <div class=\"content__top\">\n      <ul class=\"breadcrumbs\">\n        <li class=\"breadcrumbs__item\">\n          <router-link class=\"breadcrumbs__link\" :to=\"{ name: 'main' }\">\n            Каталог\n          </router-link>\n        </li>\n        <li class=\"breadcrumbs__item\">\n          <router-link class=\"breadcrumbs__link\" :to=\"{ name: 'cart' }\">\n            Корзина\n          </router-link>\n        </li>\n        <li class=\"breadcrumbs__item\">\n          <a class=\"breadcrumbs__link\">\n            Оформление заказа\n          </a>\n        </li>\n      </ul>\n\n      <h1 class=\"content__title\">\n        Заказ оформлен <span>№ 23621</span>\n      </h1>\n    </div>\n\n    <section class=\"cart\">\n      <form class=\"cart__form form\" action=\"#\" method=\"POST\">\n        <div class=\"cart__field\">\n          <p class=\"cart__message\">\n            Благодарим за&nbsp;выбор нашего магазина. На&nbsp;Вашу почту придет письмо с&nbsp;деталями заказа.\n            Наши менеджеры свяжутся с&nbsp;Вами в&nbsp;течение часа для уточнения деталей доставки.\n          </p>\n\n          <ul class=\"dictionary\">\n            <li class=\"dictionary__item\">\n              <span class=\"dictionary__key\">\n                Получатель\n              </span>\n              <span class=\"dictionary__value\">\n                {{ orderInfo.name }}\n              </span>\n            </li>\n            <li class=\"dictionary__item\">\n              <span class=\"dictionary__key\">\n                Адрес доставки\n              </span>\n              <span class=\"dictionary__value\">\n                {{ orderInfo.address }}\n              </span>\n            </li>\n            <li class=\"dictionary__item\">\n              <span class=\"dictionary__key\">\n                Телефон\n              </span>\n              <span class=\"dictionary__value\">\n                {{ orderInfo.phone }}\n              </span>\n            </li>\n            <li class=\"dictionary__item\">\n              <span class=\"dictionary__key\">\n                Email\n              </span>\n              <span class=\"dictionary__value\">\n                {{ orderInfo.email }}\n              </span>\n            </li>\n            <li class=\"dictionary__item\">\n              <span class=\"dictionary__key\">\n                Способ оплаты\n              </span>\n              <span class=\"dictionary__value\">\n                Картой при получении\n              </span>\n            </li>\n          </ul>\n        </div>\n\n        <div class=\"cart__block\">\n          <ul class=\"cart__orders\">\n            <li class=\"cart__order\" v-for=\"items in orderInfo.basket\">\n              <h3>Товар</h3>\n              <b>₽</b>\n              <span>Артикул: {{ items }}</span>\n            </li>\n          </ul>\n\n          <div class=\"cart__total\">\n            <p>Доставка: <b>500 ₽</b></p>\n            <p>Итого: <b>3</b> товара на сумму <b>37 970 ₽</b></p>\n          </div>\n        </div>\n      </form>\n    </section>\n  </main>\n</template>\n\n<script>\nimport numberFormat from '@/helpers/numberFormat';\n// import { mapGetters } from 'vuex';\n\nexport default {\n  filters: {\n    numberFormat\n  },\n  computed: {\n    // ...mapGetters({ products: 'orderBasketInfo', totalPrice: 'cartTotalPrice' }),\n    orderInfo() {\n      return this.$store.state.orderInfo ? this.$store.state.orderInfo : {}\n    }\n  },\n  created() {\n    if (this.$store.state.orderInfo && this.$store.state.orderInfo.id === this.$router.params.id) {\n      return;\n    }\n\n    this.$store.dispatch('loadOrderInfo', this.$router.params.id);\n  }\n}\n</script>"],"mappings":"AAkGA,OAAAA,YAAA;AACA;;AAEA;EACAC,OAAA;IACAD,YAAA,EAAAA;EACA;EACAE,QAAA;IACA;IACAC,SAAA,WAAAA,UAAA;MACA,YAAAC,MAAA,CAAAC,KAAA,CAAAF,SAAA,QAAAC,MAAA,CAAAC,KAAA,CAAAF,SAAA;IACA;EACA;EACAG,OAAA,WAAAA,QAAA;IACA,SAAAF,MAAA,CAAAC,KAAA,CAAAF,SAAA,SAAAC,MAAA,CAAAC,KAAA,CAAAF,SAAA,CAAAI,EAAA,UAAAC,OAAA,CAAAC,MAAA,CAAAF,EAAA;MACA;IACA;IAEA,KAAAH,MAAA,CAAAM,QAAA,uBAAAF,OAAA,CAAAC,MAAA,CAAAF,EAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}