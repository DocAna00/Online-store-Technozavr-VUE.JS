{"ast":null,"code":"import _objectSpread from \"/Users/anadoc/Desktop/Skillbox Anastasia/Skillbox Projects/vue-final-project/final_project_vue.js/project/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/web.timers.js\";\nimport ProductList from '@/components/ProductList.vue';\nimport BasePaginatioan from '@/components/BasePaginatioan.vue';\nimport ProductFilter from '@/components/ProductFilter.vue';\nimport axios from 'axios';\nimport { API_BASE_URL } from '@/config';\nimport countProductsOnPage from '@/helpers/countProductsOnPage';\nexport default {\n  components: {\n    ProductList: ProductList,\n    BasePaginatioan: BasePaginatioan,\n    ProductFilter: ProductFilter\n  },\n  data: function data() {\n    return {\n      filterPriceFrom: null,\n      filterPriceTo: null,\n      filterCategoryId: 0,\n      // filterColorId: [],\n      // filterPropId: [],\n      // filterPropName: null,\n      page: 1,\n      productsPerPage: 12,\n      productsData: null,\n      productsLoading: false,\n      productsLoadingFailed: false,\n      filterCategoryMainPropSlug: '',\n      filterSku: []\n    };\n  },\n  props: ['categoryId'],\n  computed: {\n    // products() {\n    //   function filterColors(a, b) {\n    //     let result = a.reduce((acc, item) => {\n    //       acc.push(b.includes(item.color.id));\n    //       return acc;\n    //     }, []);\n    //     return result.includes(true);\n    //   }\n    //   let data = this.productsData\n    //     ? this.productsData.items.map(product => {\n    //       return {\n    //         ...product,\n    //         image: product.preview.file.url\n    //       };\n    //     })\n    //     : [];\n    //   return this.filterColorId.length > 0\n    //     ? data.filter(item => filterColors(item.colors, this.filterColorId))\n    //     : data;\n    // },\n    products: function products() {\n      return this.productsData ? this.productsData.items.map(function (prod) {\n        return _objectSpread(_objectSpread({}, product), {}, {\n          image: product.preview.file.url\n        });\n      }) : [];\n    },\n    countProducts: function countProducts() {\n      return this.productsData ? this.productsData.pagination.total : 0;\n    },\n    // filterName() {\n    //   return this.filterPropName ? `props[${this.filterPropName}]` : null;\n    // }\n    inputCategoryId: function inputCategoryId() {\n      return this.categoryId ? this.categoryId : null;\n    }\n  },\n  methods: {\n    countProductsOnPage: countProductsOnPage,\n    // categorySelect() {\n    //   if (this.$route.query.category) {\n    //     this.filterCategoryId = Number(this.$route.query.category);\n    //   }\n    // },\n    loadProducts: function loadProducts() {\n      var _this = this;\n      this.productsLoading = true;\n      this.productsLoadingFailed = false;\n      var params = {};\n      if (this.filterPriceFrom) params.minPrice = this.filterPriceFrom;\n      if (this.filterPriceTo) params.maxPrice = this.filterPriceTo;\n      if (this.filterCategoryId) params.categoryId = this.filterCategoryId;\n      var str = '';\n      if (this.filterSku.length !== 0) {\n        this.filterSku.forEach(function (el, i) {\n          str += \"props[\".concat(_this.filterCategoryMainPropSlug, \"][]=\").concat(el);\n          if (i < _this.filterSku.length - 1) str += '&';\n        });\n      }\n      clearTimeout(this.loadProductsTimer);\n      this.loadProductsTimer = setTimeout(function () {\n        axios.get(API_BASE_URL + \"/api/products?\".concat(str), {\n          params: _objectSpread({\n            // categoryId: this.filterCategoryId,\n            page: _this.page,\n            limit: _this.productsPerPage\n          }, params)\n        }).then(function (response) {\n          return _this.productsData = response.data;\n        })[\"catch\"](function () {\n          return _this.productsLoadingFailed = true;\n        }).then(function () {\n          return _this.productsLoading = false;\n        });\n      }, 0);\n    },\n    resetFilters: function resetFilters() {\n      this.filterPriceFrom = 0;\n      this.filterPriceTo = 0;\n      this.filterCategoryId = 0;\n      this.filterCategoryMainPropSlug = '';\n      this.filterSku = [];\n      this.loadProducts();\n    }\n  },\n  watch: {\n    page: function page() {\n      this.loadProducts();\n    } // filterPriceFrom() {\n    //   this.loadProducts();\n    // },\n    // filterPriceTo() {\n    //   this.loadProducts();\n    // },\n    // filterCategoryId() {\n    //   this.loadProducts();\n    // },\n    // filterColorId() {\n    //   this.loadProducts();\n    // },\n    // filterPropId() {\n    //   this.loadProducts();\n    // }\n  },\n  created: function created() {\n    // this.loadProducts();\n    // this.categorySelect();\n  }\n};","map":{"version":3,"names":["ProductList","BasePaginatioan","ProductFilter","axios","API_BASE_URL","countProductsOnPage","components","data","filterPriceFrom","filterPriceTo","filterCategoryId","page","productsPerPage","productsData","productsLoading","productsLoadingFailed","filterCategoryMainPropSlug","filterSku","props","computed","products","items","map","prod","_objectSpread","product","image","preview","file","url","countProducts","pagination","total","inputCategoryId","categoryId","methods","loadProducts","_this","params","minPrice","maxPrice","str","length","forEach","el","i","concat","clearTimeout","loadProductsTimer","setTimeout","get","limit","then","response","resetFilters","watch","created"],"sources":["src/pages/MainPage.vue"],"sourcesContent":["<template>\n  <main class=\"content container\">\n    <div class=\"content__top content__top--catalog\">\n      <h1 class=\"content__title\">\n        Каталог\n      </h1>\n      <span class=\"content__info\">\n        {{ countProducts + \" \" + countProductsOnPage(countProducts) }}\n      </span>\n    </div>\n    <div class=\"content__catalog\">\n      <ProductFilter :price-from.sync=\"filterPriceFrom\" :price-to.sync=\"filterPriceTo\"\n        :category-id.sync=\"filterCategoryId\" :color-id.sync=\"filterColorId\" :prop-id.sync=\"filterPropId\"\n        :prop-name.sync=\"filterPropName\"></ProductFilter>\n      <section class=\"catalog\">\n        <div v-if=\"productsLoading\" style=\"font-size: 25px; text-align: center\"><img src=\"../1488.gif\"\n            style=\"vertical-align: middle; padding-right: 5px\">Загрузка товаров...</div>\n        <div v-if=\"productsLoadingFailed\">Произошла ошибка при загрузке товаров\n          <button @click.prevent=\"loadProducts\">Перезагрузить страницу</button>\n        </div>\n        <ProductList :products=\"products\"></ProductList>\n        <BasePaginatioan v-model=\"page\" :count=\"countProducts\" :per-page=\"productsPerPage\"></BasePaginatioan>\n      </section>\n\n    </div>\n  </main>\n</template>\n\n<script>\nimport ProductList from '@/components/ProductList.vue';\nimport BasePaginatioan from '@/components/BasePaginatioan.vue';\nimport ProductFilter from '@/components/ProductFilter.vue';\nimport axios from 'axios';\nimport { API_BASE_URL } from '@/config';\nimport countProductsOnPage from '@/helpers/countProductsOnPage';\n\nexport default {\n  components: { ProductList, BasePaginatioan, ProductFilter },\n  data() {\n    return {\n      filterPriceFrom: null,\n      filterPriceTo: null,\n      filterCategoryId: 0,\n      // filterColorId: [],\n      // filterPropId: [],\n      // filterPropName: null,\n      page: 1,\n      productsPerPage: 12,\n      productsData: null,\n      productsLoading: false,\n      productsLoadingFailed: false,\n      filterCategoryMainPropSlug: '',\n      filterSku: []\n    }\n  },\n  props: ['categoryId'],\n  computed: {\n    // products() {\n    //   function filterColors(a, b) {\n    //     let result = a.reduce((acc, item) => {\n    //       acc.push(b.includes(item.color.id));\n    //       return acc;\n    //     }, []);\n    //     return result.includes(true);\n    //   }\n    //   let data = this.productsData\n    //     ? this.productsData.items.map(product => {\n    //       return {\n    //         ...product,\n    //         image: product.preview.file.url\n    //       };\n    //     })\n    //     : [];\n    //   return this.filterColorId.length > 0\n    //     ? data.filter(item => filterColors(item.colors, this.filterColorId))\n    //     : data;\n    // },\n    products() {\n      return this.productsData\n        ? this.productsData.items.map((prod) => ({\n          ...product,\n          image: product.preview.file.url,\n        }))\n        : [];\n    },\n    countProducts() {\n      return this.productsData ? this.productsData.pagination.total : 0;\n    },\n    // filterName() {\n    //   return this.filterPropName ? `props[${this.filterPropName}]` : null;\n    // }\n    inputCategoryId() {\n      return this.categoryId ? this.categoryId : null;\n    }\n  },\n  methods: {\n    countProductsOnPage,\n    // categorySelect() {\n    //   if (this.$route.query.category) {\n    //     this.filterCategoryId = Number(this.$route.query.category);\n    //   }\n    // },\n    loadProducts() {\n      this.productsLoading = true;\n      this.productsLoadingFailed = false;\n\n      const params = {};\n      if (this.filterPriceFrom) params.minPrice = this.filterPriceFrom;\n      if (this.filterPriceTo) params.maxPrice = this.filterPriceTo;\n      if (this.filterCategoryId) params.categoryId = this.filterCategoryId;\n\n      let str = '';\n      if (this.filterSku.length !== 0) {\n        this.filterSku.forEach((el, i) => {\n          str += `props[${this.filterCategoryMainPropSlug}][]=${el}`;\n          if (i < this.filterSku.length - 1) str += '&';\n        });\n      }\n\n      clearTimeout(this.loadProductsTimer);\n      this.loadProductsTimer = setTimeout(() => {\n        axios.get(API_BASE_URL + `/api/products?${str}`, {\n          params: {\n            // categoryId: this.filterCategoryId,\n            page: this.page,\n            limit: this.productsPerPage,\n          //   minPrice: this.filterPriceFrom,\n          //   maxPrice: this.filterPriceTo,\n          //   [this.filterName]: this.filterPropId\n          // }\n          ...params,\n          },\n        })\n          .then(response => this.productsData = response.data)\n          .catch(() => this.productsLoadingFailed = true)\n          .then(() => this.productsLoading = false);\n      }, 0);\n    },\n    resetFilters() {\n      this.filterPriceFrom = 0;\n      this.filterPriceTo = 0;\n      this.filterCategoryId = 0;\n      this.filterCategoryMainPropSlug = '';\n      this.filterSku = [];\n      this.loadProducts();\n    },\n  },\n  watch: {\n    page() {\n      this.loadProducts();\n    }\n    // filterPriceFrom() {\n    //   this.loadProducts();\n    // },\n    // filterPriceTo() {\n    //   this.loadProducts();\n    // },\n    // filterCategoryId() {\n    //   this.loadProducts();\n    // },\n    // filterColorId() {\n    //   this.loadProducts();\n    // },\n    // filterPropId() {\n    //   this.loadProducts();\n    // }\n  },\n  created() {\n    // this.loadProducts();\n    // this.categorySelect();\n  }\n}\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}