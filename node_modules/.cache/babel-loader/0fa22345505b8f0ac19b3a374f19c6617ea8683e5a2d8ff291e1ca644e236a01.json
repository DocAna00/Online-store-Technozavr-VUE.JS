{"ast":null,"code":"import axios from 'axios';\nimport { API_BASE_URL } from '@/config';\nexport default {\n  data: function data() {\n    return {\n      currentPriceFrom: null,\n      currentPriceTo: null,\n      currentCategoryId: null,\n      currentColorId: [],\n      currentPropId: [],\n      currentPropName: null,\n      categoriesData: null,\n      categoryData: null,\n      colorsData: [],\n      propsData: []\n    };\n  },\n  props: ['priceFrom', 'priceTo', 'categoryId', 'colorId', 'propId', 'propName'],\n  computed: {\n    categories: function categories() {\n      return this.categoriesData ? this.categoriesData.items : [];\n    },\n    category: function category() {\n      return this.categoryData ? this.categoryData.productProps[0] : [];\n    },\n    colors: function colors() {\n      return this.colorsData ? this.colorsData.items : [];\n    }\n  },\n  watch: {\n    priceFrom: function priceFrom(value) {\n      this.currentPriceFrom = value;\n    },\n    priceTo: function priceTo(value) {\n      this.currentPriceTo = value;\n    },\n    categoryId: function categoryId(value) {\n      this.currentCategoryId = value;\n    },\n    colorId: function colorId(value) {\n      this.currentColorId = value;\n    },\n    propId: function propId(value) {\n      this.currentPropId = value;\n    },\n    currentCategoryId: function currentCategoryId() {\n      var _this = this;\n      this.categoryData = null;\n      if (this.currentCategoryId > 0) {\n        axios.get(API_BASE_URL + \"/api/productCategories/\" + this.currentCategoryId).then(function (response) {\n          return _this.categoryData = response.data;\n        }).then(function () {\n          return _this.currentPropName = _this.categoryData.productProps.length > 0 ? _this.categoryData.productProps[0].code : null;\n        }).then(function () {\n          return _this.currentPropId = [];\n        }).then(function () {\n          return _this.currentColorId = [];\n        });\n      }\n    }\n  },\n  methods: {\n    submit: function submit() {\n      this.$emit('update:priceFrom', this.currentPriceFrom);\n      this.$emit('update:priceTo', this.currentPriceTo);\n      this.$emit('update:categoryId', this.currentCategoryId);\n      this.$emit('update:colorId', this.currentColorId);\n      this.$emit(\"update:propId\", this.currentPropId);\n      this.$emit(\"update:propName\", this.currentPropName);\n    },\n    reset: function reset() {\n      this.$emit(\"update:priceFrom\", null);\n      this.$emit(\"update:priceTo\", null);\n      this.$emit(\"update:categoryId\", 0);\n      this.$emit(\"update:propId\", []);\n      this.$emit(\"update:colorId\", []);\n      this.currentCategoryId = 0;\n    },\n    loadCategories: function loadCategories() {\n      var _this2 = this;\n      axios.get(API_BASE_URL + '/api/productCategories').then(function (response) {\n        return _this2.categoriesData = response.data;\n      });\n    },\n    loadColors: function loadColors() {\n      var _this3 = this;\n      axios.get(API_BASE_URL + '/api/colors').then(function (response) {\n        return _this3.colorsData = response.data;\n      });\n    },\n    submitCategory: function submitCategory() {\n      this.currentCategoryId = this.categoryId;\n    }\n  },\n  created: function created() {\n    this.loadCategories();\n    this.loadColors();\n    this.submitCategory();\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","data","currentPriceFrom","currentPriceTo","currentCategoryId","currentColorId","currentPropId","currentPropName","categoriesData","categoryData","colorsData","propsData","props","computed","categories","items","category","productProps","colors","watch","priceFrom","value","priceTo","categoryId","colorId","propId","_this","get","then","response","length","code","methods","submit","$emit","reset","loadCategories","_this2","loadColors","_this3","submitCategory","created"],"sources":["src/components/ProductFilter.vue"],"sourcesContent":["<template>\n    <aside class=\"filter\">\n        <h2 class=\"filter__title\">Фильтры</h2>\n\n        <form class=\"filter__form form\" action=\"#\" method=\"get\" @submit.prevent=\"submit\">\n            <fieldset class=\"form__block\">\n                <legend class=\"form__legend\">Цена</legend>\n                <label class=\"form__label form__label--price\" for=\"filter-from\">\n                    <input class=\"form__input\" type=\"text\" name=\"min-price\" v-model.number=\"currentPriceFrom\">\n                    <span class=\"form__value\">От</span>\n                </label>\n                <label class=\"form__label form__label--price\">\n                    <input class=\"form__input\" type=\"text\" name=\"max-price\" v-model.number=\"currentPriceTo\">\n                    <span class=\"form__value\">До</span>\n                </label>\n            </fieldset>\n\n            <fieldset class=\"form__block\">\n                <legend class=\"form__legend\">Категория</legend>\n                <label class=\"form__label form__label--select\">\n                    <select class=\"form__select\" type=\"text\" name=\"category\" v-model=\"currentCategoryId\">\n                        <option value=\"0\">Все категории</option>\n                        <option :value=\"category.id\" v-for=\"category in categories\" :key=\"category.id\">{{ category.title }}\n                        </option>\n                    </select>\n                </label>\n            </fieldset>\n\n            <fieldset class=\"form__block\" v-if=\"currentCategoryId > 0 && propName != 'color'\">\n                <legend class=\"form__legend\">Цвет</legend>\n                <ul class=\"colors\">\n                    <li class=\"colors__item\" v-for=\"color in colors\" :key=\"color.title + color.id\">\n                        <label class=\"colors__label\">\n                            <input class=\"colors__radio sr-only\" type=\"checkbox\" name=\"color\" :value=\"color.id\"\n                                v-model=\"currentColorId\">\n                            <span class=\"colors__value\" :style=\"{ 'background-color': color.code }\">\n                            </span>\n                        </label>\n                    </li>\n                </ul>\n            </fieldset>\n\n            <fieldset class=\"form__block\" v-if=\"currentCategoryId > 0 && category\">\n                <legend class=\"form__legend\">{{ category.title }}</legend>\n                <ul class=\"check-list\">\n                    <li class=\"check-list__item\" v-for=\"(item, index) in category.availableValues\" :key=\"index\">\n                        <label class=\"check-list__label\">\n                            <input class=\"check-list__check sr-only\" type=\"checkbox\" name=\"volume\" :value=\"item.value\"\n                                v-model=\"currentPropId\" :checked=\"index === 0\" />\n                            <span class=\"check-list__desc\">\n                                {{ item.value }}\n                                <span>({{ item.productsCount }})</span>\n                            </span>\n                        </label>\n                    </li>\n                </ul>\n            </fieldset>\n\n            <button class=\"filter__submit button button--primery\" type=\"submit\">\n                Применить\n            </button>\n            <button class=\"filter__reset button button--second\" type=\"button\" @click.prevent=\"reset\" v-if=\"currentPriceFrom ||\n                currentPriceTo ||\n                currentCategoryId ||\n                currentColorId.length > 1 ||\n                currentPropId.length > 1\n                \">\n                Сбросить\n            </button>\n        </form>\n    </aside>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { API_BASE_URL } from '@/config';\n\nexport default {\n    data() {\n        return {\n            currentPriceFrom: null,\n            currentPriceTo: null,\n            currentCategoryId: null,\n            currentColorId: [],\n            currentPropId: [],\n            currentPropName: null,\n\n            categoriesData: null,\n            categoryData: null,\n            colorsData: [],\n            propsData: []\n        }\n    },\n    props: ['priceFrom', 'priceTo', 'categoryId', 'colorId', 'propId', 'propName'],\n    computed: {\n        categories() {\n            return this.categoriesData ? this.categoriesData.items : [];\n        },\n        category() {\n            return this.categoryData ? this.categoryData.productProps[0] : [];\n        },\n        colors() {\n            return this.colorsData ? this.colorsData.items : [];\n        }\n    },\n    watch: {\n        priceFrom(value) {\n            this.currentPriceFrom = value;\n        },\n        priceTo(value) {\n            this.currentPriceTo = value;\n        },\n        categoryId(value) {\n            this.currentCategoryId = value;\n        },\n        colorId(value) {\n            this.currentColorId = value;\n        },\n        propId(value) {\n            this.currentPropId = value;\n        },\n        currentCategoryId: function () {\n            this.categoryData = null;\n            if (this.currentCategoryId > 0) {\n                axios\n                    .get(API_BASE_URL + \"/api/productCategories/\" + this.currentCategoryId)\n                    .then(response => (this.categoryData = response.data))\n                    .then(\n                        () =>\n                        (this.currentPropName =\n                            this.categoryData.productProps.length > 0\n                                ? this.categoryData.productProps[0].code\n                                : null)\n                    )\n                    .then(() => (this.currentPropId = []))\n                    .then(() => (this.currentColorId = []));\n            }\n        }\n    },\n    methods: {\n        submit() {\n            this.$emit('update:priceFrom', this.currentPriceFrom);\n            this.$emit('update:priceTo', this.currentPriceTo);\n            this.$emit('update:categoryId', this.currentCategoryId);\n            this.$emit('update:colorId', this.currentColorId);\n            this.$emit(\"update:propId\", this.currentPropId);\n            this.$emit(\"update:propName\", this.currentPropName);\n        },\n        reset() {\n            this.$emit(\"update:priceFrom\", null);\n            this.$emit(\"update:priceTo\", null);\n            this.$emit(\"update:categoryId\", 0);\n            this.$emit(\"update:propId\", []);\n            this.$emit(\"update:colorId\", []);\n            this.currentCategoryId = 0;\n        },\n        loadCategories() {\n            axios.get(API_BASE_URL + '/api/productCategories')\n                .then(response => this.categoriesData = response.data);\n        },\n        loadColors() {\n            axios.get(API_BASE_URL + '/api/colors')\n                .then(response => this.colorsData = response.data);\n        },\n        submitCategory() {\n            this.currentCategoryId = this.categoryId;\n        }\n    },\n    created() {\n        this.loadCategories();\n        this.loadColors();\n        this.submitCategory();\n    }\n}\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}