{"ast":null,"code":"// import categories from '@/data/categories';\n// import colors from '@/data/colors';\nimport axios from 'axios';\nimport { API_BASE_URL } from '@/config';\nexport default {\n  data: function data() {\n    return {\n      currentPriceFrom: 0,\n      currentPriceTo: 0,\n      currentCategoryId: 0,\n      currentColorId: 0,\n      categoriesData: null,\n      colorsData: null\n    };\n  },\n  props: ['priceFrom', 'priceTo', 'categoryId', 'colorId'],\n  computed: {\n    categories: function categories() {\n      return this.categoriesData ? this.categoriesData.items : [];\n    },\n    colors: function colors() {\n      return this.colorsData ? this.colorsData.items : [];\n    }\n  },\n  watch: {\n    priceFrom: function priceFrom(value) {\n      this.currentPriceFrom = value;\n    },\n    priceTo: function priceTo(value) {\n      this.currentPriceTo = value;\n    },\n    categoryId: function categoryId(value) {\n      this.currentCategoryId = value;\n    },\n    colorId: function colorId(value) {\n      this.currentColorId = value;\n    }\n  },\n  methods: {\n    submit: function submit() {\n      this.$emit('update:priceFrom', this.currentPriceFrom);\n      this.$emit('update:priceTo', this.currentPriceTo);\n      this.$emit('update:categoryId', this.currentCategoryId);\n      this.$emit('update:colorId', this.currentColorId);\n    },\n    reset: function reset() {\n      this.$emit('update:priceFrom', 0);\n      this.$emit('update:priceTo', 0);\n      this.$emit('update:categoryId', 0);\n      this.$emit('update:colorId', 0);\n    },\n    loadCategories: function loadCategories() {\n      var _this = this;\n      axios.get(API_BASE_URL + '/api/productCategories').then(function (response) {\n        return _this.categoriesData = response.data;\n      });\n    },\n    loadColors: function loadColors() {\n      var _this2 = this;\n      axios.get(API_BASE_URL + '/api/colors').then(function (response) {\n        return _this2.colorsData = response.data;\n      });\n    }\n  },\n  created: function created() {\n    this.loadCategories();\n    this.loadColors();\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","data","currentPriceFrom","currentPriceTo","currentCategoryId","currentColorId","categoriesData","colorsData","props","computed","categories","items","colors","watch","priceFrom","value","priceTo","categoryId","colorId","methods","submit","$emit","reset","loadCategories","_this","get","then","response","loadColors","_this2","created"],"sources":["src/components/ProductFilter.vue"],"sourcesContent":["<template>\n    <aside class=\"filter\">\n        <h2 class=\"filter__title\">Фильтры</h2>\n\n        <form class=\"filter__form form\" action=\"#\" method=\"get\" @submit.prevent=\"submit\">\n            <fieldset class=\"form__block\">\n                <legend class=\"form__legend\">Цена</legend>\n                <label class=\"form__label form__label--price\">\n                    <input class=\"form__input\" type=\"text\" name=\"min-price\" v-model.number=\"currentPriceFrom\">\n                    <span class=\"form__value\">От</span>\n                </label>\n                <label class=\"form__label form__label--price\">\n                    <input class=\"form__input\" type=\"text\" name=\"max-price\" v-model.number=\"currentPriceTo\">\n                    <span class=\"form__value\">До</span>\n                </label>\n            </fieldset>\n\n            <fieldset class=\"form__block\">\n                <legend class=\"form__legend\">Категория</legend>\n                <label class=\"form__label form__label--select\">\n                    <select class=\"form__select\" type=\"text\" name=\"category\" v-model.number=\"currentCategoryId\">\n                        <option value=\"0\">Все категории</option>\n                        <option :value=\"category.id\" v-for=\"category in categories\" :key=\"category.id\">{{ category.title }}\n                        </option>\n                    </select>\n                </label>\n            </fieldset>\n\n            <fieldset class=\"form__block\">\n                <legend class=\"form__legend\">Цвет</legend>\n                <ul class=\"colors\">\n                    <li class=\"colors__item\" v-for=\"color in colors\" :key=\"color.id\">\n                        <label class=\"colors__label\">\n                            <input class=\"colors__radio sr-only\" type=\"radio\" name=\"color\" :value=\"color.id\" v-model=\"currentColorId\">\n                            <span class=\"colors__value\" :style=\"{backgroundColor: \"$`{your_variable}`}>\n                            </span>\n                        </label>\n                    </li>\n                </ul>\n            </fieldset>\n\n            <fieldset class=\"form__block\">\n                <legend class=\"form__legend\">Объемб в ГБ</legend>\n                <ul class=\"check-list\">\n                    <li class=\"check-list__item\">\n                        <label class=\"check-list__label\">\n                            <input class=\"check-list__check sr-only\" type=\"checkbox\" name=\"volume\" value=\"8\" checked=\"\">\n                            <span class=\"check-list__desc\">\n                                8\n                                <span>(313)</span>\n                            </span>\n                        </label>\n                    </li>\n                    <li class=\"check-list__item\">\n                        <label class=\"check-list__label\">\n                            <input class=\"check-list__check sr-only\" type=\"checkbox\" name=\"volume\" value=\"16\">\n                            <span class=\"check-list__desc\">\n                                16\n                                <span>(461)</span>\n                            </span>\n                        </label>\n                    </li>\n                    <li class=\"check-list__item\">\n                        <label class=\"check-list__label\">\n                            <input class=\"check-list__check sr-only\" type=\"checkbox\" name=\"volume\" value=\"32\">\n                            <span class=\"check-list__desc\">\n                                32\n                                <span>(313)</span>\n                            </span>\n                        </label>\n                    </li>\n                    <li class=\"check-list__item\">\n                        <label class=\"check-list__label\">\n                            <input class=\"check-list__check sr-only\" type=\"checkbox\" name=\"volume\" value=\"64\">\n                            <span class=\"check-list__desc\">\n                                64\n                                <span>(313)</span>\n                            </span>\n                        </label>\n                    </li>\n                    <li class=\"check-list__item\">\n                        <label class=\"check-list__label\">\n                            <input class=\"check-list__check sr-only\" type=\"checkbox\" name=\"volume\" value=\"128\">\n                            <span class=\"check-list__desc\">\n                                128\n                                <span>(313)</span>\n                            </span>\n                        </label>\n                    </li>\n                    <li class=\"check-list__item\">\n                        <label class=\"check-list__label\">\n                            <input class=\"check-list__check sr-only\" type=\"checkbox\" name=\"volume\" value=\"264\">\n                            <span class=\"check-list__desc\">\n                                264\n                                <span>(313)</span>\n                            </span>\n                        </label>\n                    </li>\n                </ul>\n            </fieldset>\n\n            <button class=\"filter__submit button button--primery\" type=\"submit\">\n                Применить\n            </button>\n            <button class=\"filter__reset button button--second\" type=\"button\" @click.prevent=\"reset\">\n                Сбросить\n            </button>\n        </form>\n    </aside>\n</template>\n\n<script>\n// import categories from '@/data/categories';\n// import colors from '@/data/colors';\nimport axios from 'axios';\nimport {API_BASE_URL} from '@/config';\n\nexport default {\n    data() {\n        return {\n            currentPriceFrom: 0,\n            currentPriceTo: 0,\n            currentCategoryId: 0,\n            currentColorId: 0,\n            categoriesData: null,\n            colorsData: null\n        }\n    },\n    props: ['priceFrom', 'priceTo', 'categoryId', 'colorId'],\n    computed: {\n        categories() {\n            return this.categoriesData ? this.categoriesData.items : [];\n        },\n        colors() {\n            return this.colorsData ? this.colorsData.items : [];\n        }\n    },\n    watch: {\n        priceFrom(value){\n            this.currentPriceFrom = value;\n        },\n        priceTo(value){\n            this.currentPriceTo = value;\n        },\n        categoryId(value){\n            this.currentCategoryId = value;\n        },\n        colorId(value) {\n            this.currentColorId = value;\n        }\n    },\n    methods: {\n        submit() {\n            this.$emit('update:priceFrom', this.currentPriceFrom);\n            this.$emit('update:priceTo', this.currentPriceTo);\n            this.$emit('update:categoryId', this.currentCategoryId);\n            this.$emit('update:colorId', this.currentColorId);\n        },\n        reset() {\n            this.$emit('update:priceFrom', 0);\n            this.$emit('update:priceTo', 0);\n            this.$emit('update:categoryId', 0);\n            this.$emit('update:colorId', 0);\n        },\n        loadCategories() {\n            axios.get(API_BASE_URL + '/api/productCategories')\n            .then(response => this.categoriesData = response.data);\n        },\n        loadColors() {\n            axios.get(API_BASE_URL + '/api/colors')\n            .then(response => this.colorsData = response.data);\n    }\n    },\n    created() {\n        this.loadCategories();\n        this.loadColors();\n    }\n}\n</script>"],"mappings":"AAgHA;AACA;AACA,OAAAA,KAAA;AACA,SAAAC,YAAA;AAEA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,gBAAA;MACAC,cAAA;MACAC,iBAAA;MACAC,cAAA;MACAC,cAAA;MACAC,UAAA;IACA;EACA;EACAC,KAAA;EACAC,QAAA;IACAC,UAAA,WAAAA,WAAA;MACA,YAAAJ,cAAA,QAAAA,cAAA,CAAAK,KAAA;IACA;IACAC,MAAA,WAAAA,OAAA;MACA,YAAAL,UAAA,QAAAA,UAAA,CAAAI,KAAA;IACA;EACA;EACAE,KAAA;IACAC,SAAA,WAAAA,UAAAC,KAAA;MACA,KAAAb,gBAAA,GAAAa,KAAA;IACA;IACAC,OAAA,WAAAA,QAAAD,KAAA;MACA,KAAAZ,cAAA,GAAAY,KAAA;IACA;IACAE,UAAA,WAAAA,WAAAF,KAAA;MACA,KAAAX,iBAAA,GAAAW,KAAA;IACA;IACAG,OAAA,WAAAA,QAAAH,KAAA;MACA,KAAAV,cAAA,GAAAU,KAAA;IACA;EACA;EACAI,OAAA;IACAC,MAAA,WAAAA,OAAA;MACA,KAAAC,KAAA,0BAAAnB,gBAAA;MACA,KAAAmB,KAAA,wBAAAlB,cAAA;MACA,KAAAkB,KAAA,2BAAAjB,iBAAA;MACA,KAAAiB,KAAA,wBAAAhB,cAAA;IACA;IACAiB,KAAA,WAAAA,MAAA;MACA,KAAAD,KAAA;MACA,KAAAA,KAAA;MACA,KAAAA,KAAA;MACA,KAAAA,KAAA;IACA;IACAE,cAAA,WAAAA,eAAA;MAAA,IAAAC,KAAA;MACAzB,KAAA,CAAA0B,GAAA,CAAAzB,YAAA,6BACA0B,IAAA,WAAAC,QAAA;QAAA,OAAAH,KAAA,CAAAlB,cAAA,GAAAqB,QAAA,CAAA1B,IAAA;MAAA;IACA;IACA2B,UAAA,WAAAA,WAAA;MAAA,IAAAC,MAAA;MACA9B,KAAA,CAAA0B,GAAA,CAAAzB,YAAA,kBACA0B,IAAA,WAAAC,QAAA;QAAA,OAAAE,MAAA,CAAAtB,UAAA,GAAAoB,QAAA,CAAA1B,IAAA;MAAA;IACA;EACA;EACA6B,OAAA,WAAAA,QAAA;IACA,KAAAP,cAAA;IACA,KAAAK,UAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}