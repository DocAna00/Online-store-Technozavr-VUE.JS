{"ast":null,"code":"import _objectSpread from \"/Users/anadoc/Desktop/Skillbox Anastasia/Skillbox Projects/Vue.js Shop/Vue.js/08_api_2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/web.timers.js\";\nimport numberFormat from '@/helpers/numberFormat';\nimport BaseFormText from '@/components/BaseFormText.vue';\nimport BaseFormTextaera from '@/components/BaseFormTextaera.vue';\nimport { mapGetters } from 'vuex';\nimport axios from 'axios';\nimport { API_BASE_URL } from '@/config';\nexport default {\n  components: {\n    BaseFormText: BaseFormText,\n    BaseFormTextaera: BaseFormTextaera\n  },\n  data: function data() {\n    return {\n      formData: {},\n      formError: {},\n      formErrorMessage: '',\n      productsLoading: false\n    };\n  },\n  filters: {\n    numberFormat: numberFormat\n  },\n  computed: _objectSpread({}, mapGetters({\n    products: 'cartDetailProducts',\n    totalPrice: 'cartTotalPrice'\n  })),\n  methods: {\n    order: function order() {\n      var _this = this;\n      this.formError = {};\n      this.formErrorMessage = '';\n      this.productsLoading = true;\n      clearTimeout(this.loadProductsTimer);\n      this.loadProductsTimer = setTimeout(function () {\n        axios.post(API_BASE_URL + '/api/orders', _objectSpread({}, _this.formData), {\n          params: {\n            userAccessKey: _this.$store.state.userAccessKey\n          }\n        }).then(function () {\n          _this.$store.commit('resetCart');\n        })[\"catch\"](function (error) {\n          _this.formError = error.response.data.error.request || {};\n          _this.formErrorMessage = error.response.data.error.message;\n        }).then(function () {\n          return _this.productsLoading = false;\n        });\n      }, 1000);\n    }\n  }\n};","map":{"version":3,"names":["numberFormat","BaseFormText","BaseFormTextaera","mapGetters","axios","API_BASE_URL","components","data","formData","formError","formErrorMessage","productsLoading","filters","computed","_objectSpread","products","totalPrice","methods","order","_this","clearTimeout","loadProductsTimer","setTimeout","post","params","userAccessKey","$store","state","then","commit","error","response","request","message"],"sources":["src/pages/OrderPage.vue"],"sourcesContent":["<template>\n    <main class=\"content container\">\n        <div class=\"content__top\">\n            <ul class=\"breadcrumbs\">\n                <li class=\"breadcrumbs__item\">\n                    <router-link class=\"breadcrumbs__link\" :to=\"{ name: 'main' }\">\n                        Каталог\n                    </router-link>\n                </li>\n                <li class=\"breadcrumbs__item\">\n                    <router-link class=\"breadcrumbs__link\" :to=\"{ name: 'cart' }\">\n                        Корзина\n                    </router-link>\n                </li>\n                <li class=\"breadcrumbs__item\">\n                    <a class=\"breadcrumbs__link\">\n                        Оформление заказа\n                    </a>\n                </li>\n            </ul>\n\n            <h1 class=\"content__title\">\n                Корзина\n            </h1>\n            <span class=\"content__info\">\n                {{ products.length }} товар(а)\n            </span>\n        </div>\n\n        <section class=\"cart\">\n            <div v-if=\"productsLoading\" style=\"font-size: 25px; text-align: center\"><img src=\"../1488.gif\"\n            style=\"vertical-align: middle; padding-right: 5px\">Идёт отправка формы...</div>\n            <form class=\"cart__form form\" action=\"#\" method=\"POST\" @submit.prevent=\"order\">\n                <div class=\"cart__field\">\n                    <div class=\"cart__data\">\n                        <BaseFormText v-model=\"formData.name\" title=\"ФИО\" placeholder=\"Введите ваше полное имя\"\n                            :error=\"formError.name\"></BaseFormText>\n\n                        <BaseFormText v-model=\"formData.address\" title=\"Адрес доставки\" placeholder=\"Введите ваш адрес\"\n                            :error=\"formError.address\"></BaseFormText>\n\n                        <BaseFormText v-model=\"formData.phone\" title=\"Телефон\" placeholder=\"Введите ваш телефон\"\n                            :error=\"formError.phone\" type=\"tel\"></BaseFormText>\n\n                        <BaseFormText v-model=\"formData.email\" title=\"Email\" placeholder=\"Введи ваш Email\"\n                            :error=\"formError.email\"></BaseFormText>\n\n                        <BaseFormTextaera title=\"Комментарий к заказу\" v-model=\"formData.comment\" :error=\"formError.comment\"\n                            placeholder=\"Ваши пожелания\"></BaseFormTextaera>\n                    </div>\n\n                    <div class=\"cart__options\">\n                        <h3 class=\"cart__title\">Доставка</h3>\n                        <ul class=\"cart__options options\">\n                            <li class=\"options__item\">\n                                <label class=\"options__label\">\n                                    <input class=\"options__radio sr-only\" type=\"radio\" name=\"delivery\" value=\"0\" checked=\"\">\n                                    <span class=\"options__value\">\n                                        Самовывоз <b>бесплатно</b>\n                                    </span>\n                                </label>\n                            </li>\n                            <li class=\"options__item\">\n                                <label class=\"options__label\">\n                                    <input class=\"options__radio sr-only\" type=\"radio\" name=\"delivery\" value=\"500\">\n                                    <span class=\"options__value\">\n                                        Курьером <b>500 ₽</b>\n                                    </span>\n                                </label>\n                            </li>\n                        </ul>\n\n                        <h3 class=\"cart__title\">Оплата</h3>\n                        <ul class=\"cart__options options\">\n                            <li class=\"options__item\">\n                                <label class=\"options__label\">\n                                    <input class=\"options__radio sr-only\" type=\"radio\" name=\"pay\" value=\"card\">\n                                    <span class=\"options__value\">\n                                        Картой при получении\n                                    </span>\n                                </label>\n                            </li>\n                            <li class=\"options__item\">\n                                <label class=\"options__label\">\n                                    <input class=\"options__radio sr-only\" type=\"radio\" name=\"pay\" value=\"cash\">\n                                    <span class=\"options__value\">\n                                        Наличными при получении\n                                    </span>\n                                </label>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n\n                <div class=\"cart__block\">\n                    <ul class=\"cart__orders\">\n                        <li class=\"cart__order\" v-for=\"item in products\" :key=\"item.productId\" :item=\"item\">\n                            <h3> {{ item.product.title }}</h3>\n                            <b>{{ (item.amount * item.product.price) | numberFormat }} ₽</b>\n                            <span>Количество: {{ item.amount }}</span>\n                            <span>Артикул: {{ item.product.id }}</span>\n                        </li>\n                    </ul>\n\n                    <div class=\"cart__total\">\n                        <p>Доставка: <b>500 ₽</b></p>\n                        <p>Итого: <b>{{ products.length }}</b> товар(а) на сумму <b>{{ totalPrice | numberFormat }} ₽</b>\n                        </p>\n                    </div>\n\n                    <button class=\"cart__button button button--primery\" type=\"submit\">\n                        Оформить заказ\n                    </button>\n                </div>\n                <div class=\"cart__error form__error-block\" v-if=\"formErrorMessage\">\n                    <h4>Заявка не отправлена!</h4>\n                    <p>\n                        {{ formErrorMessage }}\n                    </p>\n                </div>\n            </form>\n        </section>\n    </main>\n</template>\n\n<script>\nimport numberFormat from '@/helpers/numberFormat';\nimport BaseFormText from '@/components/BaseFormText.vue';\nimport BaseFormTextaera from '@/components/BaseFormTextaera.vue';\nimport { mapGetters } from 'vuex';\nimport axios from 'axios';\nimport { API_BASE_URL } from '@/config';\n\nexport default {\n    components: { BaseFormText, BaseFormTextaera },\n    data() {\n        return {\n            formData: {},\n            formError: {},\n            formErrorMessage: '',\n            productsLoading: false\n        }\n    },\n    filters: {\n        numberFormat\n    },\n    computed: {\n        ...mapGetters({ products: 'cartDetailProducts', totalPrice: 'cartTotalPrice' })\n    },\n    methods: {\n        order() {\n            this.formError = {};\n            this.formErrorMessage = '';\n            this.productsLoading = true;\n            clearTimeout(this.loadProductsTimer);\n      this.loadProductsTimer = setTimeout(() => {\n            axios.post(API_BASE_URL + '/api/orders', {\n                ...this.formData\n            }, {\n                params: {\n                    userAccessKey: this.$store.state.userAccessKey\n                }\n            })\n                .then(() => {\n                    this.$store.commit('resetCart')\n                })\n                .catch(error => {\n                    this.formError = error.response.data.error.request || {};\n                    this.formErrorMessage = error.response.data.error.message;\n                })\n                .then(() => this.productsLoading = false);}, 1000);\n        }\n    }\n}\n</script>"],"mappings":";;AA8HA,OAAAA,YAAA;AACA,OAAAC,YAAA;AACA,OAAAC,gBAAA;AACA,SAAAC,UAAA;AACA,OAAAC,KAAA;AACA,SAAAC,YAAA;AAEA;EACAC,UAAA;IAAAL,YAAA,EAAAA,YAAA;IAAAC,gBAAA,EAAAA;EAAA;EACAK,IAAA,WAAAA,KAAA;IACA;MACAC,QAAA;MACAC,SAAA;MACAC,gBAAA;MACAC,eAAA;IACA;EACA;EACAC,OAAA;IACAZ,YAAA,EAAAA;EACA;EACAa,QAAA,EAAAC,aAAA,KACAX,UAAA;IAAAY,QAAA;IAAAC,UAAA;EAAA,GACA;EACAC,OAAA;IACAC,KAAA,WAAAA,MAAA;MAAA,IAAAC,KAAA;MACA,KAAAV,SAAA;MACA,KAAAC,gBAAA;MACA,KAAAC,eAAA;MACAS,YAAA,MAAAC,iBAAA;MACA,KAAAA,iBAAA,GAAAC,UAAA;QACAlB,KAAA,CAAAmB,IAAA,CAAAlB,YAAA,kBAAAS,aAAA,KACAK,KAAA,CAAAX,QAAA,GACA;UACAgB,MAAA;YACAC,aAAA,EAAAN,KAAA,CAAAO,MAAA,CAAAC,KAAA,CAAAF;UACA;QACA,GACAG,IAAA;UACAT,KAAA,CAAAO,MAAA,CAAAG,MAAA;QACA,WACA,WAAAC,KAAA;UACAX,KAAA,CAAAV,SAAA,GAAAqB,KAAA,CAAAC,QAAA,CAAAxB,IAAA,CAAAuB,KAAA,CAAAE,OAAA;UACAb,KAAA,CAAAT,gBAAA,GAAAoB,KAAA,CAAAC,QAAA,CAAAxB,IAAA,CAAAuB,KAAA,CAAAG,OAAA;QACA,GACAL,IAAA;UAAA,OAAAT,KAAA,CAAAR,eAAA;QAAA;MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}