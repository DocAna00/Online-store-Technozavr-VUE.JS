{"ast":null,"code":"import _objectSpread from \"/Users/anadoc/Desktop/Skillbox Anastasia/Skillbox Projects/vue-final-project/final_project_vue.js/project/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport numberFormat from '@/helpers/numberFormat';\nimport getColorCode from '@/helpers/getColorCode';\nimport { mapActions } from 'vuex';\nexport default {\n  filters: {\n    numberFormat: numberFormat\n  },\n  props: ['item'],\n  computed: {\n    quantity: {\n      get: function get() {\n        return this.item.quantity;\n      },\n      set: function set(value) {\n        this.$store.dispatch('updateCartProductAmount', {\n          productBasketId: this.item.productBasketId,\n          quantity: value\n        });\n      }\n    },\n    mainPropTitle: function mainPropTitle() {\n      return this.item.product.productOffer.product.mainProp.title;\n    },\n    propValue: function propValue() {\n      var value = this.item.product.productOffer.propValues[0].value;\n      return value;\n    },\n    color: function color() {\n      return this.item.product.color.color.code;\n    }\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions(['deleteProductFromCart'])), {}, {\n    getColorCode: getColorCode,\n    incrementQuantity: function incrementQuantity() {\n      this.$store.commit(\"updateCartProductAmount\", {\n        productBasketId: this.item.productBasketId,\n        quantity: ++this.quantity\n      });\n    },\n    decrementQuantity: function decrementQuantity() {\n      if (this.quantity > 1) {\n        this.$store.commit(\"updateCartProductAmount\", {\n          productBasketId: this.item.productBasketId,\n          quantity: --this.quantity\n        });\n      }\n    }\n  })\n};","map":{"version":3,"names":["numberFormat","getColorCode","mapActions","filters","props","computed","quantity","get","item","set","value","$store","dispatch","productBasketId","mainPropTitle","product","productOffer","mainProp","title","propValue","propValues","color","code","methods","_objectSpread","incrementQuantity","commit","decrementQuantity"],"sources":["src/components/CartItem.vue"],"sourcesContent":["<template>\n    <li class=\"cart__item product\">\n        <div class=\"product__pic\">\n            <img :src=\"item.product.image\" width=\"120\" height=\"120\" :alt=\"item.product.title\">\n        </div>\n        <h3 class=\"product__title\">\n            {{ item.product.productOffer.title }}\n        </h3>\n\n        <!-- <div class=\"product__info\">\n            <p v-show=\"mainPropTitle !== 'Цвет'\">\n                Цвет:&nbsp;<span class=\"color\" :style=\"{ backgroundColor: color }\"></span>\n            </p>\n            <p>\n                {{ mainPropTitle }}:&nbsp;\n                <span v-show=\"mainPropTitle === 'Цвет'\">\n                    <span class=\"color\" :style=\"{ backgroundColor: color }\"></span>\n                </span>\n                <span>{{ propValue }}</span>\n            </p>\n        </div> -->\n        <p class=\"product__info\" style=\"{display:inline-flex}\">\n            {{ item.product.productOffer.product.mainProp.title }}: &nbsp;\n            <span style=\"display:inline-block\" class=\"colors__value\"\n                :style=\"{ 'background-color': getColorCode(item.product.productOffer.propValues[0].value) }\"\n                v-if=\"item.product.productOffer.product.mainProp.id == 7\">\n            </span>\n            &nbsp; {{ item.product.productOffer.propValues[0].value }}\n        </p>\n\n        <span class=\"product__code\">\n            Артикул: {{ item.product.productOffer.id }}\n        </span>\n\n        <div class=\"product__counter form__counter\">\n            <button type=\"button\" aria-label=\"Убрать один товар\" @click=\"decrementQuantity\">\n                <svg width=\"10\" height=\"10\" fill=\"currentColor\">\n                    <use xlink:href=\"#icon-minus\"></use>\n                </svg>\n            </button>\n\n            <input type=\"text\" v-model.number=\"amount\" name=\"count\">\n\n            <button type=\"button\" aria-label=\"Добавить один товар\" @click=\"incrementQuantity\">\n                <svg width=\"10\" height=\"10\" fill=\"currentColor\">\n                    <use xlink:href=\"#icon-plus\"></use>\n                </svg>\n            </button>\n        </div>\n\n        <b class=\"product__price\">\n            {{ (item.quantity * item.product.price) | numberFormat }} ₽\n        </b>\n\n        <button class=\"product__del button-del\" type=\"button\" aria-label=\"Удалить товар из корзины\"\n            @click.prevent=\"deleteProductFromCart(item.productBasketId)\">\n            <svg width=\"20\" height=\"20\" fill=\"currentColor\">\n                <use xlink:href=\"#icon-close\"></use>\n            </svg>\n        </button>\n    </li>\n</template>\n\n<script>\nimport numberFormat from '@/helpers/numberFormat';\nimport getColorCode from '@/helpers/getColorCode';\nimport { mapActions } from 'vuex';\n\nexport default {\n    filters: { numberFormat },\n    props: ['item'],\n    computed: {\n        quantity: {\n            get() {\n                return this.item.quantity;\n            },\n            set(value) {\n                this.$store.dispatch('updateCartProductAmount', { productBasketId: this.item.productBasketId, quantity: value });\n            }\n        },\n        mainPropTitle() {\n            return this.item.product.productOffer.product.mainProp.title;\n        },\n        propValue() {\n            const { value } = this.item.product.productOffer.propValues[0];\n            return value;\n        },\n        color() {\n            return this.item.product.color.color.code;\n        },\n    },\n    methods: {\n        ...mapActions(['deleteProductFromCart']),\n        getColorCode,\n        incrementQuantity() {\n            this.$store.commit(\"updateCartProductAmount\", {\n                productBasketId: this.item.productBasketId,\n                quantity: ++this.quantity\n            });\n        },\n        decrementQuantity() {\n            if (this.quantity > 1) {\n                this.$store.commit(\"updateCartProductAmount\", {\n                    productBasketId: this.item.productBasketId,\n                    quantity: --this.quantity\n                });\n            }\n        }\n    }\n}\n</script>"],"mappings":";AAgEA,OAAAA,YAAA;AACA,OAAAC,YAAA;AACA,SAAAC,UAAA;AAEA;EACAC,OAAA;IAAAH,YAAA,EAAAA;EAAA;EACAI,KAAA;EACAC,QAAA;IACAC,QAAA;MACAC,GAAA,WAAAA,IAAA;QACA,YAAAC,IAAA,CAAAF,QAAA;MACA;MACAG,GAAA,WAAAA,IAAAC,KAAA;QACA,KAAAC,MAAA,CAAAC,QAAA;UAAAC,eAAA,OAAAL,IAAA,CAAAK,eAAA;UAAAP,QAAA,EAAAI;QAAA;MACA;IACA;IACAI,aAAA,WAAAA,cAAA;MACA,YAAAN,IAAA,CAAAO,OAAA,CAAAC,YAAA,CAAAD,OAAA,CAAAE,QAAA,CAAAC,KAAA;IACA;IACAC,SAAA,WAAAA,UAAA;MACA,IAAAT,KAAA,QAAAF,IAAA,CAAAO,OAAA,CAAAC,YAAA,CAAAI,UAAA,IAAAV,KAAA;MACA,OAAAA,KAAA;IACA;IACAW,KAAA,WAAAA,MAAA;MACA,YAAAb,IAAA,CAAAO,OAAA,CAAAM,KAAA,CAAAA,KAAA,CAAAC,IAAA;IACA;EACA;EACAC,OAAA,EAAAC,aAAA,CAAAA,aAAA,KACAtB,UAAA;IACAD,YAAA,EAAAA,YAAA;IACAwB,iBAAA,WAAAA,kBAAA;MACA,KAAAd,MAAA,CAAAe,MAAA;QACAb,eAAA,OAAAL,IAAA,CAAAK,eAAA;QACAP,QAAA,SAAAA;MACA;IACA;IACAqB,iBAAA,WAAAA,kBAAA;MACA,SAAArB,QAAA;QACA,KAAAK,MAAA,CAAAe,MAAA;UACAb,eAAA,OAAAL,IAAA,CAAAK,eAAA;UACAP,QAAA,SAAAA;QACA;MACA;IACA;EAAA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}